下载docker镜像和必要的配置
docker pull primiano/docker-webvirtmgr
mkdir -p /data/vm
groupadd -g 1010 webvirtmgr
useradd -u 1010 -g webvirtmgr -s /sbin/nologin -d /data/vm webvirtmgr
chown -R webvirtmgr:webvirtmgr /data/vm
启动容器
docker run -d -p 8080:8080 -p 6080:6080 --name webvirtmgr --mount type=bind,source=/data/vm,target=/data/vm  primiano/docker-webvirtmgr
登入web
http://192.168.26.128:8080/login/
用户：admin
密码：1234
修改和创建web的密码
docker exec -it 4fc9a521f235 /bin/bash
进入容器
cd /webvirtmgr
python manage.py changepassword admin
python传参，调用交互式
python manage.py createsuperuser
创建超级用户

进入容器操作，修改创建的xml信息
sed -i 's/172.17.42.1/0.0.0.0/g' /webvirtmgr/vrtManager/create.py
退出重启容器
docker restart ca1403171c12
￼
yum -y install epel-release
yum -y install git python-pip libvirt-python libxml2-python python-websockify supervisor nginx
yum -y install gcc python-devel
pip install numpy    


mkdir /application/
cd /application/
git clone git://github.com/retspen/webvirtmgr.git  
git clone https://github.com/retspen/webvirtmgr.git                                    
  
3、数据库安装
cd /application/
wget http://www.sqlite.org/sqlite-3.5.6.tar.gz
cd sqlite-3.5.6/
./configure --disable-tcl  
make
make install 

4、webvirtmgr安装
cd /application/webvirtmgr
pip install -r requirements.txt

./manage.py syncdb
./manage.py collectstatic


5、webvirtmgr配置
mkdir -pv /var/www
cp -Rv /application/webvirtmgr /var/www/webvirtmgr

vim /etc/nginx/conf.d/webvirtmgr.conf

server {
	listen 80 default_server;
#	server_name $hostname;
#	access_log /var/log/nginx/webvirtmgr_access_log;
	location /static/ {
		root /var/www/webvirtmgr/webvirtmgr; # or /srv instead of /var
		expires max;
	}
	location / {
		proxy_pass http://127.0.0.1:8000;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Forwarded-Proto $remote_addr;
		proxy_connect_timeout 600;
		proxy_read_timeout 600;
		proxy_send_timeout 600;
		client_max_body_size 1024M; # Set higher depending on your needs
	}
}


chown -R nginx:nginx /var/www/webvirtmgr

cat > /etc/supervisord.d/webvirtmgr.ini <EOF
[program:webvirtmgr]
command=/usr/bin/python2 /var/www/webvirtmgr/manage.py run_gunicorn -c /var/www/webvirtmgr/conf/gunicorn.conf.py
#启动8000端口
directory=/var/www/webvirtmgr
autostart=true
autorestart=true
logfile=/var/log/supervisor/webvirtmgr.log
log_stderr=true
user=nginx

[program:webvirtmgr-console]
command=/usr/bin/python2 /var/www/webvirtmgr/console/webvirtmgr-console
#启动6080端口（这是控制台vnc端口）
directory=/var/www/webvirtmgr
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/webvirtmgr-console.log
redirect_stderr=true
user=nginx

EOF

确保下面bind绑定的是本机的8000端口，这个在nginx配置中定义了，被代理的端口
grep '^bind =' /var/www/webvirtmgr/conf/gunicorn.conf.py
bind = '127.0.0.1:8000'

systemctl restart nginx.service
systemctl start supervisord.service  







SSH ACCESS

su - nginx -s /bin/bash
$ ssh-keygen
$ touch ~/.ssh/config && echo -e "StrictHostKeyChecking=no\nUserKnownHostsFile=/dev/null" >> ~/.ssh/config
$ chmod 0600 ~/.ssh/config

Add webvirt user (on qemu-kvm/libvirt host server) and add it to the proper group :
$ adduser webvirtmgr && echo "password" | passwd --stdin webvirtmgr && usermod -G libvirt -a webvirtmgr

Back to webvirtmgr host and copy public key to qemu-kvm/libvirt host server:
su - nginx -s /bin/bash
$ ssh-copy-id webvirtmgr@qemu-kvm-libvirt-host
$ ssh-copy-id -P YOUR_SSH_PORT webvirtmgr@qemu-kvm-libvirt-host

Set up permissions to manage libvirt (on qemu-kvm/libvirt host server):


yum install -y novnc
