# get BDADDRESS, use HCI_Read_BD_ADDR command
# 0x1009 OpCode (OGF=0x04, OCF=0x009) and no parameters
hcitool -i hci0 cmd 0x04 0x0009
< HCI Command: ogf 0x04, ocf 0x0009, plen 0
> HCI Event: 0x0e plen 10
  01 09 10 00 AC 1F 00 C0 45 43
# 01 is the Num_HCI_Command_Packets parameter
# 09 10 is the Command OpCode for which this Command Complete Event is returned (in little endian format)
# 00 is the status – Success in this case

# change bluetooth BDADDREES
addr=54:03:84:72:00:55
IFS=':' read -r b0 b1 b2 b3 b4 b5 <<< "${addr}"
bdaddr="0x$b5 0x$b4 0x$b3 0x$b2 0x$b1 0x$b0"
hcitool -i hci0 cmd 0x3f 0x001 ${bdaddr}
hciconfig hci0 reset
hciconfig hci0

# Route SCO packets to the HCI interface (enables HFP/HSP)
/usr/bin/hcitool -i $dev cmd 0x3f 0x1c 0x01 0x02 0x00 0x01 0x01 > /dev/null

# Force reinitialisation to allow extra features such as Secure Simple Pairing
# to be enabled, for currently unknown reasons. This requires bluetoothd to be
# running, which it isn't yet. Use this kludge of forking off another shell
# with a delay, pending a complete understanding of the issues.
(sleep 5; /usr/bin/bluetoothctl power off; /usr/bin/bluetoothctl power on) &

dbus-send --system --type=method_call --print-reply --dest=org.bluez /org/bluez/hci0 org.freedesktop.DBus.Introspectable.Introspect
dbus-send --system --type=method_call --print-reply --dest=org.bluez /org/bluez/hci0 org.bluez.Adapter1.StartDiscovery
dbus-send --print-reply --system --type=method_call --dest=org.bluez /org/bluez/hci0 org.freedesktop.DBus.Properties.Get string:org.bluez.Adapter1 string:Discoverable
dbus-send --print-reply --system --type=method_call --dest=org.bluez /org/bluez/hci0 org.freedesktop.DBus.Properties.Set string:org.bluez.Adapter1 string:Discoverable variant:boolean:true
dbus-send --system --type=method_call --print-reply --dest=org.bluez /org/bluez/hci0/dev_54_03_84_72_58_B5 org.bluez.Device1.Connect
dbus-send --system --type=method_call --print-reply --dest=org.bluez /org/bluez/hci0/dev_54_03_84_72_58_B5 org.bluez.Device1.Disconnect

echo 'Y' > /sys/module/bluetooth/parameters/disable_ertm

/sys/kernel/debug/bluetooth/hci0/adv_min_interval
/sys/kernel/debug/bluetooth/hci0/adv_max_interval
menu gatt
[bluetoothctl] register-service 0xFFFF # (Choose yes when asked if primary service)
[bluetoothctl] register-characteristic 0xAAAA read       # (Select a value of 1 when prompted)
[bluetoothctl] register-characteristic 0xBBBB read,write # (Select a value of 0 when prompted)
[bluetoothctl] register-characteristic 0xCCCC read       # (Select a value of 2 when prompted)
[bluetoothctl] register-application # (This commits the services/characteristics and registers the profile)
[bluetoothctl] back
[bluetoothctl] advertise on

btmgmt power off
btmgmt discov on
btmgmt connectable on
btmgmt pairable on
btmgmt power on
bluetoothctl --agent KeyboardDisplay

cat /proc/bus/input/devices
# 搜索普通蓝牙
hcitool scan

hciconfig hci0 lestates
# 搜索BLE蓝牙
hcitool lescan | grep 54:03:84:72:58:B5
gatttool -b 54:03:84:72:58:B5 -I
# [54:03:84:72:58:B5][LE]> primary
# attr handle: 0x0001, end grp handle: 0x0004 uuid: 00001801-0000-1000-8000-00805f9b34fb 服务名称:GATT【Generic Attribute】
# attr handle: 0x0005, end grp handle: 0x000b uuid: 00001800-0000-1000-8000-00805f9b34fb 服务名称:GAP【Generic Access】
# attr handle: 0x000c, end grp handle: 0x001e uuid: 0000180a-0000-1000-8000-00805f9b34fb 服务名称:DEVICE INFORMATION 服务编码
# attr handle: 0x001f, end grp handle: 0x0047 uuid: 00001812-0000-1000-8000-00805f9b34fb 服务名称:Human Interface Device 服务编码
# attr handle: 0x0048, end grp handle: 0x004b uuid: 0000180f-0000-1000-8000-00805f9b34fb 服务名称:Battery Service 服务编码
# attr handle: 0x004c, end grp handle: 0x004e uuid: 00001802-0000-1000-8000-00805f9b34fb 服务名称:IMMEDIATE ALERT 服务编码
# attr handle: 0x004f, end grp handle: 0x0053 uuid: 0000d1ff-3c17-d293-8e48-14fe2e4da212
[54:03:84:72:58:B5][LE]> char-desc
handle: 0x0001, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x0002, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0003, uuid: 00002a05-0000-1000-8000-00805f9b34fb
handle: 0x0004, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x0005, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x0006, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0007, uuid: 00002a00-0000-1000-8000-00805f9b34fb
handle: 0x0008, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0009, uuid: 00002a01-0000-1000-8000-00805f9b34fb
handle: 0x000a, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x000b, uuid: 00002a04-0000-1000-8000-00805f9b34fb
handle: 0x000c, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x000d, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x000e, uuid: 00002a50-0000-1000-8000-00805f9b34fb
handle: 0x000f, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0010, uuid: 00002a23-0000-1000-8000-00805f9b34fb
handle: 0x0011, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0012, uuid: 00002a24-0000-1000-8000-00805f9b34fb
handle: 0x0013, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0014, uuid: 00002a25-0000-1000-8000-00805f9b34fb
handle: 0x0015, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0016, uuid: 00002a26-0000-1000-8000-00805f9b34fb
handle: 0x0017, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0018, uuid: 00002a27-0000-1000-8000-00805f9b34fb
handle: 0x0019, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x001a, uuid: 00002a28-0000-1000-8000-00805f9b34fb
handle: 0x001b, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x001c, uuid: 00002a29-0000-1000-8000-00805f9b34fb
handle: 0x001d, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x001e, uuid: 00002a2a-0000-1000-8000-00805f9b34fb
handle: 0x001f, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x0020, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0021, uuid: 00002a4b-0000-1000-8000-00805f9b34fb
handle: 0x0022, uuid: 00002907-0000-1000-8000-00805f9b34fb
handle: 0x0023, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0024, uuid: 00002a4a-0000-1000-8000-00805f9b34fb
handle: 0x0025, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0026, uuid: 00002a4c-0000-1000-8000-00805f9b34fb
handle: 0x0027, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0028, uuid: 00002a4e-0000-1000-8000-00805f9b34fb
handle: 0x0029, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x002a, uuid: 00002a22-0000-1000-8000-00805f9b34fb
handle: 0x002b, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x002c, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x002d, uuid: 00002a32-0000-1000-8000-00805f9b34fb
handle: 0x002e, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x002f, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x0030, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x0031, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0032, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0033, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x0034, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0035, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0036, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x0037, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x0038, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0039, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x003a, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x003b, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x003c, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x003d, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x003e, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x003f, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x0040, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0041, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0042, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x0043, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0044, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0045, uuid: 00002a4d-0000-1000-8000-00805f9b34fb
handle: 0x0046, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x0047, uuid: 00002908-0000-1000-8000-00805f9b34fb
handle: 0x0048, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x0049, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x004a, uuid: 00002a19-0000-1000-8000-00805f9b34fb
handle: 0x004b, uuid: 00002902-0000-1000-8000-00805f9b34fb
handle: 0x004c, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x004d, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x004e, uuid: 00002a06-0000-1000-8000-00805f9b34fb
handle: 0x004f, uuid: 00002800-0000-1000-8000-00805f9b34fb
handle: 0x0050, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0051, uuid: 0000a002-0000-1000-8000-00805f9b34fb
handle: 0x0052, uuid: 00002803-0000-1000-8000-00805f9b34fb
handle: 0x0053, uuid: 0000a003-0000-1000-8000-00805f9b34fb

hcitool lecc 54:03:84:72:58:B5
hcitool leinfo 54:03:84:72:58:B5
gatttool -b 54:03:84:72:58:B5 --char-write-req --handle=0x0024 --value=0100 --listen
gatttool -t random -b 54:03:84:72:58:B5 -I



// Sample Services.
attr.put("0000180d-0000-1000-8000-00805f9b34fb", "Heart Rate Service");
attr.put("0000180a-0000-1000-8000-00805f9b34fb", "Device Information Service");
// Sample Characteristics.
attr.put("00002a37-0000-1000-8000-00805f9b34fb", "Heart Rate Measurement");
attr.put("00002a29-0000-1000-8000-00805f9b34fb", "Manufacturer Name String");

// GATT Services
attr.put("00001800-0000-1000-8000-00805f9b34fb", "Generic Access");
attr.put("00001801-0000-1000-8000-00805f9b34fb", "Generic Attribute");

// GATT Declarations
attr.put("00002800-0000-1000-8000-00805f9b34fb", "Primary Service");
attr.put("00002801-0000-1000-8000-00805f9b34fb", "Secondary Service");
attr.put("00002802-0000-1000-8000-00805f9b34fb", "Include");
attr.put("00002803-0000-1000-8000-00805f9b34fb", "Characteristic");

// GATT Descriptors
attr.put("00002900-0000-1000-8000-00805f9b34fb", "Characteristic Extended Properties");
attr.put("00002901-0000-1000-8000-00805f9b34fb", "Characteristic User Description");
attr.put("00002902-0000-1000-8000-00805f9b34fb", "Client Characteristic Configuration");
attr.put("00002903-0000-1000-8000-00805f9b34fb", "Server Characteristic Configuration");
attr.put("00002904-0000-1000-8000-00805f9b34fb", "Characteristic Presentation Format");
attr.put("00002905-0000-1000-8000-00805f9b34fb", "Characteristic Aggregate Format");
attr.put("00002906-0000-1000-8000-00805f9b34fb", "Valid Range");
attr.put("00002907-0000-1000-8000-00805f9b34fb", "External Report Reference Descriptor");
attr.put("00002908-0000-1000-8000-00805f9b34fb", "Report Reference Descriptor");

// GATT Characteristics
attr.put("00002a00-0000-1000-8000-00805f9b34fb", "Device Name");
attr.put("00002a01-0000-1000-8000-00805f9b34fb", "Appearance");
attr.put("00002a02-0000-1000-8000-00805f9b34fb", "Peripheral Privacy Flag");
attr.put("00002a03-0000-1000-8000-00805f9b34fb", "Reconnection Address");
attr.put("00002a04-0000-1000-8000-00805f9b34fb", "PPCP");
attr.put("00002a05-0000-1000-8000-00805f9b34fb", "Service Changed");

// GATT Service UUIDs
attr.put("00001802-0000-1000-8000-00805f9b34fb", "Immediate Alert");
attr.put("00001803-0000-1000-8000-00805f9b34fb", "Link Loss");
attr.put("00001804-0000-1000-8000-00805f9b34fb", "Tx Power");
attr.put("00001805-0000-1000-8000-00805f9b34fb", "Current Time Service");
attr.put("00001806-0000-1000-8000-00805f9b34fb", "Reference Time Update Service");
attr.put("00001807-0000-1000-8000-00805f9b34fb", "Next DST Change Service");
attr.put("00001808-0000-1000-8000-00805f9b34fb", "Glucose");
attr.put("00001809-0000-1000-8000-00805f9b34fb", "Health Thermometer");
attr.put("0000180a-0000-1000-8000-00805f9b34fb", "Device Information");
attr.put("0000180b-0000-1000-8000-00805f9b34fb", "Network Availability");
attr.put("0000180d-0000-1000-8000-00805f9b34fb", "Heart Rate");
attr.put("0000180e-0000-1000-8000-00805f9b34fb", "Phone Alert Status Service");
attr.put("0000180f-0000-1000-8000-00805f9b34fb", "Battery Service");
attr.put("00001810-0000-1000-8000-00805f9b34fb", "Blood Pressure");
attr.put("00001811-0000-1000-8000-00805f9b34fb", "Alert Notification Service");
attr.put("00001812-0000-1000-8000-00805f9b34fb", "Human Interface Device");
attr.put("00001813-0000-1000-8000-00805f9b34fb", "Scan Parameters");
attr.put("00001814-0000-1000-8000-00805f9b34fb", "Running Speed and Cadence");
attr.put("00001816-0000-1000-8000-00805f9b34fb", "Cycling Speed and Cadence");
attr.put("00001818-0000-1000-8000-00805f9b34fb", "Cycling Power");
attr.put("00001819-0000-1000-8000-00805f9b34fb", "Location and Navigation");

// GATT Characteristic UUIDs
attr.put("00002a06-0000-1000-8000-00805f9b34fb", "Alert Level");
attr.put("00002a07-0000-1000-8000-00805f9b34fb", "Tx Power Level");
attr.put("00002a08-0000-1000-8000-00805f9b34fb", "Date Time");
attr.put("00002a09-0000-1000-8000-00805f9b34fb", "Day of Week");
attr.put("00002a0a-0000-1000-8000-00805f9b34fb", "Day Date Time");
attr.put("00002a0c-0000-1000-8000-00805f9b34fb", "Exact Time 256");
attr.put("00002a0d-0000-1000-8000-00805f9b34fb", "DST Offset");
attr.put("00002a0e-0000-1000-8000-00805f9b34fb", "Time Zone");
attr.put("00002a0f-0000-1000-8000-00805f9b34fb", "Local Time Information");
attr.put("00002a11-0000-1000-8000-00805f9b34fb", "Time with DST");
attr.put("00002a12-0000-1000-8000-00805f9b34fb", "Time Accuracy");
attr.put("00002a13-0000-1000-8000-00805f9b34fb", "Time Source");
attr.put("00002a14-0000-1000-8000-00805f9b34fb", "Reference Time Information");
attr.put("00002a16-0000-1000-8000-00805f9b34fb", "Time Update Control Point");
attr.put("00002a17-0000-1000-8000-00805f9b34fb", "Time Update State");
attr.put("00002a18-0000-1000-8000-00805f9b34fb", "Glucose Measurement");
attr.put("00002a19-0000-1000-8000-00805f9b34fb", "Battery Level");
attr.put("00002a1c-0000-1000-8000-00805f9b34fb", "Temperature Measurement");
attr.put("00002a1d-0000-1000-8000-00805f9b34fb", "Temperature Type");
attr.put("00002a1e-0000-1000-8000-00805f9b34fb", "Intermediate Temperature");
attr.put("00002a21-0000-1000-8000-00805f9b34fb", "Measurement Interval");
attr.put("00002a22-0000-1000-8000-00805f9b34fb", "Boot Keyboard Input Report");
attr.put("00002a23-0000-1000-8000-00805f9b34fb", "System ID");
attr.put("00002a24-0000-1000-8000-00805f9b34fb", "Model Number String");
attr.put("00002a25-0000-1000-8000-00805f9b34fb", "Serial Number String");
attr.put("00002a26-0000-1000-8000-00805f9b34fb", "Firmware Revision String");
attr.put("00002a27-0000-1000-8000-00805f9b34fb", "Hardware Revision String");
attr.put("00002a28-0000-1000-8000-00805f9b34fb", "Software Revision String");
attr.put("00002a29-0000-1000-8000-00805f9b34fb", "Manufacturer Name String");
attr.put("00002a2a-0000-1000-8000-00805f9b34fb", "IEEE 11073-20601 Regulatory Certification Data List");
attr.put("00002a2b-0000-1000-8000-00805f9b34fb", "Current Time");
attr.put("00002a31-0000-1000-8000-00805f9b34fb", "Scan Refresh");
attr.put("00002a32-0000-1000-8000-00805f9b34fb", "Boot Keyboard Output Report");
attr.put("00002a33-0000-1000-8000-00805f9b34fb", "Boot Mouse Input Report");
attr.put("00002a34-0000-1000-8000-00805f9b34fb", "Glucose Measurement Context");
attr.put("00002a35-0000-1000-8000-00805f9b34fb", "Blood Pressure Measurement");
attr.put("00002a36-0000-1000-8000-00805f9b34fb", "Intermediate Cuff Pressure");
attr.put("00002a37-0000-1000-8000-00805f9b34fb", "Heart Rate Measurement");
attr.put("00002a38-0000-1000-8000-00805f9b34fb", "Body Sensor Location");
attr.put("00002a39-0000-1000-8000-00805f9b34fb", "Heart Rate Control Point");
attr.put("00002a3e-0000-1000-8000-00805f9b34fb", "Network Availability");
attr.put("00002a3f-0000-1000-8000-00805f9b34fb", "Alert Status");
attr.put("00002a40-0000-1000-8000-00805f9b34fb", "Ringer Control Point");
attr.put("00002a41-0000-1000-8000-00805f9b34fb", "Ringer Setting");
attr.put("00002a42-0000-1000-8000-00805f9b34fb", "Alert Category ID Bit Mask");
attr.put("00002a43-0000-1000-8000-00805f9b34fb", "Alert Category ID");
attr.put("00002a44-0000-1000-8000-00805f9b34fb", "Alert Notification Control Point");
attr.put("00002a45-0000-1000-8000-00805f9b34fb", "Unread Alert Status");
attr.put("00002a46-0000-1000-8000-00805f9b34fb", "New Alert");
attr.put("00002a47-0000-1000-8000-00805f9b34fb", "Supported New Alert Category");
attr.put("00002a48-0000-1000-8000-00805f9b34fb", "Supported Unread Alert Category");
attr.put("00002a49-0000-1000-8000-00805f9b34fb", "Blood Pressure Feature");
attr.put("00002a4a-0000-1000-8000-00805f9b34fb", "HID Information");
attr.put("00002a4b-0000-1000-8000-00805f9b34fb", "Report Map");
attr.put("00002a4c-0000-1000-8000-00805f9b34fb", "HID Control Point");
attr.put("00002a4d-0000-1000-8000-00805f9b34fb", "Report");
attr.put("00002a4e-0000-1000-8000-00805f9b34fb", "Protocol Mode");
attr.put("00002a4f-0000-1000-8000-00805f9b34fb", "Scan Interval Window");
attr.put("00002a50-0000-1000-8000-00805f9b34fb", "PnP ID");
attr.put("00002a51-0000-1000-8000-00805f9b34fb", "Glucose Feature");
attr.put("00002a52-0000-1000-8000-00805f9b34fb", "Record Access Control Point");
attr.put("00002a53-0000-1000-8000-00805f9b34fb", "RSC Measurement");
attr.put("00002a54-0000-1000-8000-00805f9b34fb", "RSC Feature");
attr.put("00002a55-0000-1000-8000-00805f9b34fb", "SC Control Point");
attr.put("00002a5b-0000-1000-8000-00805f9b34fb", "CSC Measurement");
attr.put("00002a5c-0000-1000-8000-00805f9b34fb", "CSC Feature");
attr.put("00002a5d-0000-1000-8000-00805f9b34fb", "Sensor Location");
attr.put("00002a63-0000-1000-8000-00805f9b34fb", "Cycling Power Measurement");
attr.put("00002a64-0000-1000-8000-00805f9b34fb", "Cycling Power Vector");
attr.put("00002a65-0000-1000-8000-00805f9b34fb", "Cycling Power Feature");
attr.put("00002a66-0000-1000-8000-00805f9b34fb", "Cycling Power Control Point");
attr.put("00002a67-0000-1000-8000-00805f9b34fb", "Location and Speed");
attr.put("00002a68-0000-1000-8000-00805f9b34fb", "Navigation");
attr.put("00002a69-0000-1000-8000-00805f9b34fb", "Position Quality");
attr.put("00002a6a-0000-1000-8000-00805f9b34fb", "LN Feature");
attr.put("00002a6b-0000-1000-8000-00805f9b34fb", "LN Control Point");


bluetoothctl power on
bluetoothctl agent on
bluetoothctl default-agent
bluetoothctl pairable on
bluetoothctl discoverable on
bluetoothctl scan on
bluetoothctl pair 54:03:84:72:58:B5
bluetoothctl trust 54:03:84:72:58:B5
bluetoothctl connect 54:03:84:72:58:B5
bluetoothctl info 54:03:84:72:58:B5

bluetoothctl power on
bluetoothctl agent KeyboardOnly
bluetoothctl default-agent
bluetoothctl pairable on
bluetoothctl scan on

btmon
? bt-agent 0000 &
? # echo "54:03:84:72:58:B5 0000" > '/var/lib/bluetooth/43:45:C0:00:1F:AC/pincodes'
? # echo "0000" > /etc/bluetooth/passkeys/default
cat<<EOF >> '/var/lib/bluetooth/43:45:C0:00:1F:AC/54:03:84:72:58:B5/info'
[LinkKey]
Key=49505152
EOF


hcitool scan
echo 0000 | bt-agent hci0 54:03:84:72:58:B5
bt-device -i 54:03:84:72:58:B5

adapter=$(bluetoothctl -- list | sed -r 's/^.*(([0-9A-F]{2}:){5}[0-9A-F]{2}).*$/\1/')
{
    echo -e "select $adapter\n\n"
    echo -e "paired-devices\n\n"
} |  bluetoothctl | grep "Device " | sed -r 's/^.*(([0-9A-F]{2}:){5}[0-9A-F]{2}).*$/\1/'

{
    printf "select $adapter\n\n"
    printf "power on\n\n"
    # sleep 2
    printf "connect 54:03:84:72:58:B5\n\n"
    # sleep 4
} | bluetoothctl

coproc BLUETOOTH_PROC (bluetoothctl) || echo FAILED
    echo -e 'power on\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    echo -e 'default-agent\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    echo -e 'discoverable on\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    echo -e 'pairable on\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    echo -e 'scan on\n' >&${BLUETOOTH_PROC[1]}
    sleep 10
    echo -e 'scan off\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    echo -e 'devices\n' >&${BLUETOOTH_PROC[1]}
    sleep 2
    IFS=' '
    echo 'Pair to "raspberrypi" from the target device'
    while read -ra output <&${BLUETOOTH_PROC[0]}; do
        if [[ ${output[2]} == $TARGET_DEVICE_NAME ]]; then
            echo "Found the target device with MAC address of ${output[1]}"
            echo "Pairing with the target device"
            echo -e "pair ${output[1]}\n" >&${BLUETOOTH_PROC[1]}
            sleep 10
            echo -e 'yes\n' >&${BLUETOOTH_PROC[1]}
            sleep 2
            echo -e "trust ${output[1]}\n" >&${BLUETOOTH_PROC[1]}
            sleep 2
            echo -e 'exit\n' >&${BLUETOOTH_PROC[1]}
        else
            echo "${output[@]}"
        fi
    done
    hciconfig hci0 piscan || BLUETOOTH_SETUP_FAIL=1
    sdptool add SP || BLUETOOTH_SETUP_FAIL=1
