cat <<EOF
# usb自动挂载
# /etc/johnyin/automount/
ln -s /etc/johnyin/automount/johnyin.rules      /etc/polkit-1/rules.d/johnyin.rules
ln -s /etc/johnyin/automount/98-usbmount.rules  /etc/udev/rules.d/98-usbmount.rules
ln -s /etc/johnyin/automount/usb-mount@.service /etc/systemd/system/usb-mount@.service
EOF
# # trixie
cat <<'EOF' > johnyin.rules
polkit.addRule(function(action, subject) {
    if (action.id == "org.freedesktop.udisks2.filesystem-mount" && subject.user == "johnyin") {
        return polkit.Result.YES;
    }
});
EOF
# # apt -y install polkitd-pkla
# cat <<'EOF' > /etc/polkit-1/localauthority/90-mandatory.d/johnyin.pkla
# [johnyin auto mount]
# Identity=unix-user:johnyin
# Action=org.freedesktop.udisks2.*
# ResultAny=yes
# ResultInactive=yes
# ResultActive=yes
# EOF

# auto mount usb storage (readonly)
cat << 'EOF' > 98-usbmount.rules
# udevadm control --reload-rules
# udevadm monitor
SUBSYSTEM=="block", KERNEL=="sd[a-z]*[0-9]", ACTION=="add", RUN+="/bin/systemctl start usb-mount@%k.service"
SUBSYSTEM=="block", KERNEL=="sd[a-z]*[0-9]", ACTION=="remove", RUN+="/bin/systemctl stop usb-mount@%k.service"
# SUBSYSTEM=="block", KERNEL=="sd[a-z]*[0-9]", ACTION=="change", RUN+="/usr/bin/systemctl restart minidlna.service"
# SUBSYSTEM=="block", KERNEL=="sd[a-z]*[0-9]", ACTION=="add", RUN+="/usr/bin/systemd-run --uid=johnyin /usr/bin/udisksctl mount -b /dev/%k"
# SUBSYSTEM=="block", KERNEL=="sd[a-z]*[0-9]", ACTION=="remove", RUN+="/usr/bin/systemd-run --uid=johnyin /usr/bin/udisksctl unmount -f -b /dev/%k"
EOF

cat << 'EOF' > usb-mount@.service
[Unit]
Description=auto mount block %i

[Service]
RemainAfterExit=true
User=johnyin
Group=johnyin
ExecStart=/bin/udisksctl mount -b /dev/%i
ExecStop=/bin/udisksctl unmount -f -b /dev/%i
Restart=always
RestartSec=1
StandardOutput=tty
StandardError=tty
EOF
