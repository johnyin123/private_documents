Amlogic Meson S905x (GXL)
The Amlogic Meson S905x is a SoC with a quad core Arm Cortex-A53 running at 1.5Ghz. It also contains a Cortex-M3 used as SCP.
This port is a minimal implementation of BL31 capable of booting mainline U-Boot and Linux:
SCPI support.
Basic PSCI support (CPU_ON, CPU_OFF, SYSTEM_RESET, SYSTEM_OFF). Note that CPU0 can’t be turned off, so there is a workaround to hide this from the caller.
GICv2 driver set up.
Basic SIP services (read efuse data, enable/disable JTAG).

Vendor ID:               ARM
  Model name:            Cortex-A53
    Model:               4
    Thread(s) per core:  1
    Core(s) per cluster: 4
    Socket(s):           -
    Cluster(s):          1
    Stepping:            r0p4

 15     p2pdevinterface=$(sudo wpa_cli interface | grep -E "p2p-dev" | tail -1)
 16     wlaninterface=$(echo $p2pdevinterface | cut -c1-8 --complement)
 25         sudo wpa_cli -i$p2pdevinterface p2p_find type=progressive
 26         sudo wpa_cli -i$p2pdevinterface set device_name "$(uname -n)"
 27         sudo wpa_cli -i$p2pdevinterface set device_type 7-0050F204-1
 28         sudo wpa_cli -i$p2pdevinterface set p2p_go_ht40 1
 29         sudo wpa_cli -i$p2pdevinterface wfd_subelem_set 0 000600111c44012c
 30         sudo wpa_cli -i$p2pdevinterface wfd_subelem_set 1 0006000000000000
 31         sudo wpa_cli -i$p2pdevinterface wfd_subelem_set 6 000700000000000000
 32         perentry="$(sudo wpa_cli -i$p2pdevinterface list_networks | grep "\[DISABLED\]\[P2P-PERSISTENT\]" | tail -1)"
 33         echo "${perentry}"
 34         if [ `echo "${perentry}" | grep -c "P2P-PERSISTENT"`  -gt 0 ]
 35         then
 36             networkid=${perentry%%D*}
 37             perstr="=${networkid}"
 38         else
 39             perstr=""
 40         fi
 41         echo "${perstr}"
 42         echo "${p2pdevinterface}"
 43         wlanfreq=$(sudo wpa_cli -i$wlaninterface status | grep "freq")

barrier: (Share mouse, keyboard and clipboard over the network, support win/linux)
xvkbd (virtual keyboard)
# this command sends the key control+c
xvkbd -no-jump-pointer -xsendevent -text '\Cc'
# this command sends mouse left click
xvkbd -no-jump-pointer -xsendevent -text '\m1'

DEBIAN_VERSION=bookworm ./s905_debootstrap.sh wireguard-tools v4l-utils triggerhappy sshfs python3-pip python3-venv nmon iptables dbus-x11 cec-utils build-essential bluez bluez-tools bind9 bind9utils slapd ldap-utils keepalived gnupg apt-transport-https rng-tools-debian mesa-utils unzip xxd qemu-utils mame ssmtp bind9-dnsutils polkitd-pkla python3-dev usbutils

# apt install triggerhappy
https://aur.archlinux.org/packages/firmware-phicomm-n1
# binary replace boot_targets=, first boot usb
sed -e "s/boot_targets=romusb mmc0 mmc1 mmc2 usb0 pxe dhcp/boot_targets=romusb usb0 usb1 mmc0 mmc1 pxe dhcp\x0/g" u-boot.bin.new > new.bin
xxd -p -c 2127800 uboot.bin | sed "s/$(echo -n 'boot_targets=romusb mmc0 mmc1 mmc2 usb0 pxe dhcp' | xxd -p -c 1000)/$(echo -n 'boot_targets=romusb usb0 usb1 mmc0 mmc1 pxe dhcp' | xxd -p -c 1000)/g" | xxd -p -r > newuboot.bin
# bootcmd_mmc2=devnum=2; run mmc_boot ==> bootcmd_usb1=devnum=1; run usb_boot
# uboot read ethaddr env value to set network mac address
#led
echo 0 > /sys/devices/platform/leds/leds/n1\:white\:status/brightness
echo 255 > /sys/devices/platform/leds/leds/n1\:white\:status/brightness
#get temp
awk '{print $1/1000}' /sys/class/hwmon/hwmon0/temp1_input
journalctl -alb
systemctl enable getty@tty1
systemctl enable getty@tty2
#systemctl set-default multi-user.target
#ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

#multimedia
echo "deb http://www.deb-multimedia.org  main non-free" > /etc/apt/sources.list.d/multimedia.conf
apt-get update -oAcquire::AllowInsecureRepositories=true
apt-get install deb-multimedia-keyring
#bluetooth
apt install --no-install-recommends blueman pulseaudio pulseaudio-module-bluetooth pavucontrol mpg123
# # apt install --no-install-recommends pulseaudio pulseaudio-module-bluetooth
# # usermod -a -G pulse-access,audio myuser

# auto power on bluetooth, hciconfig hci0 up / bluetoothctl power on
cat <<EOF > /etc/bluetooth/main.conf
[Policy]
AutoEnable=true
EOF

hciconfig
bluetoothctl
    power on
    agent on
    default-agent
    scan on
    pair xx:xx:xx:xx:xx:xx
    trust xx:xx:xx:xx:xx:xx
    connect xx:xx:xx:xx:xx:xx
    scan off
    exit

bluetoothd -C
sdptool add SP
reboot
bluetoothctl
    power on
    discoverable on
    scan on
    trust <PHONE_ADDRESS>
    pair <PHONE_ADDRESS>
python
    apt-get install python-bluez
    #!/usr/bin/env python
        from bluetooth import *
        server_sock=BluetoothSocket( RFCOMM )
        server_sock.bind(("",PORT_ANY))
        server_sock.listen(1)
        port = server_sock.getsockname()[1]
        uuid = "815425a5-bfac-47bf-9321-c5ff980b5e11"
        advertise_service( server_sock, "RPi Wifi config",
                           service_id = uuid,
                           service_classes = [ uuid, SERIAL_PORT_CLASS ],
                           profiles = [ SERIAL_PORT_PROFILE ])
        print "Waiting for connection on RFCOMM channel %d" % port
        client_sock, client_info = server_sock.accept()
        print "Accepted connection from ", client_info
        client_sock.send(ssid_discovered())
        ssid = client_sock.recv(1024)
        client_sock.close()
        server_sock.close()

#Xfce
apt install --no-install-recommends lightdm xserver-xorg-core xinit xserver-xorg-video-fbdev xfce4 xfce4-terminal xserver-
apt install --no-install-recommends mpv smplayer qt4-qtconfig libqt4-opengl
ldconfig


anyremote qdbus dbus-x11
DISPLAY=:0 anyremote -f /usr/share/anyremote/cfg-data/Server-mode/smplayer.cfg

AT MODE:
hcitool scan
sdptool browse XX:XX:XX:XX
    Search for "Serial Port" or "Dialup Networking" services and their channel numbers.
    To connect anyRemote to the phone it needs to run it with -s rfcomm:XX:XX:XX:XX:Y
    command line parameter, where Y is the channel number.

Server MODE:
hcitool dev : get hci address
In case of impossibility to establish bluetooth connection, please make sure:
1.Bluetooth daemon bluetoothd is started with -C option
2.You have enough permissions to register SDP service
    sdptool search --bdaddr local SP (Permission denied) then you need to run anyRemote using sudo
kTLS
   CONFIG_TLS=m 
V2L2:
    v4l2-ctl --list-formats-ext
HDMI CEC:
    # # GXBB, GXL and GXM embeds the Synopsys DesignWare HDMI TX IP version 2.01a with HDCP and I2C & S/PDIF audio source interfaces.
    xrandr --prop
    apt-get install cec-utils libcec-dev
    cec-client -l

IO_SCHEDULER:
    cat /sys/class/block/mmcblk0/queue/scheduler
CPU FREQ:
    echo "scpi-cpufreq" >> /etc/modules
    /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq
EDID:
    apt -y install read-edid edid-decode
    cat<<EOF
Section "Device"
  Driver         "nvidia"
  Option         "ConnectedMonitor" "DFP-0"
  Option         "CustomEDID" "DFP-0:/etc/X11/edid.bin"
  Option         "IgnoreEDID" "false"
  Option         "UseEDID" "true"
 EndSection
EOF
    echo -n "edid/1280x1024.bin" > /sys/module/drm/parameters/edid_firmware
    # drm.edid_firmware=edid/1280x1024.bin
    # video=HDMI-A-1:1280x1024@60e
    # # Documentation/fb/modedb.txt, "<ouput>:<WxH>@<rate><flags>" with "e" flag at the end is "force the display to be enabled", to avoid all that hotplug jank.
    # # kernel has built-in standard EDID blobs, so there's no need to put anything to /lib/firmware, initramfs or whatever:
    # drm_kms_helper.edid_firmware=edid/1920x1080.bin video=HDMI-A-1:1280x1024@60e

NFS ROOTFS:(kernel config)
    CONFIG_NFS_FS=y
    CONFIG_ROOT_NFS=y
  /etc/exports
    /opt/nfsroot  *(rw,sync,no_subtree_check,no_root_squash)

# SMT :全称"SimultaneousMultithreading",同时多线程,又称为"超线程"
# MC  :Multicore多核,每个物理核心独享一个L1 Cache缓存;
# SoC :System on Chip,系统级芯片;
# CONFIG_SCHED_SMT: 对应SMT芯片
# CONFIG_SCHED_MC : 对应MC多核芯片
# DIE             : 对应SoC芯片
cat > check_n1_hw_present.sh <<EOF
#!/usr/bin/env bash
aplay -l
hciconfig
ifconfig wlan0
ifconfig eth0
EOF

# use hardware RNG
apt install rng-tools

# # STAGING -> CONFIG_VIDEO_MESON_VDEC test case
cat < EOF > ~/.config/mpv/mpv.conf
msg-level=all=v
vo=gpu
gpu-context=wayland
# drm-connector=HDMI-A-1
# fs=yes
# hwdec=auto
hwdec=v4l2m2m-copy
hwdec-codecs=all
EOF
# mpv --msg-level=all=v --hwdec=v4l2m2m-copy --hwdec-codecs=all --vo=xv test.mp4
# h.264 ok
# mpv --msg-level=all=v --hwdec=auto-copy --gpu-context=x11egl --gpu-api=opengl --vo=gpu
# ffmpeg -c:v h264_v4l2m2m -i 1.mp4 -map 0:v -f null -y /dev/null

# # v4l2_request use fedora patched source.
# # https://kojipkgs.fedoraproject.org//packages/libva-v4l2-request/1.0.0/13.20190517gita3c2476.fc40/src/libva-v4l2-request-1.0.0-13.20190517gita3c2476.fc40.src.rpm
# # remove all h265 codes, apt -y install libdrm-dev libva-dev libtool automake
# # LIBVA_DRIVER_NAME=v4l2_request DISPLAY=:0.0 vainfo
# export LIBVA_DRIVER_NAME=v4l2_request
# # If you compile your own libva-v4l2-request and install in /usr/local/
# export LIBVA_DRIVERS_PATH=/usr/local/lib/dri
# Check /sys/class/video4linux/*/name and /sys/bus/media/devices/*/model
export LIBVA_V4L2_REQUEST_VIDEO_PATH=/dev/video0
export LIBVA_V4L2_REQUEST_MEDIA_PATH=/dev/media0
# # need webcam, so /dev/media0 exists(use usbip checked)
# mpv --hwdec=vaapi-copy --vo=drm video.mp4
mpv --gpu-context=help
mpv --hwdec=help
mpv --vo=help

other phicomm n1 kernel config:
# https://www.kernel.org/doc/html/latest/gpu/meson.html
CONFIG_PREEMPT_VOLUNTARY=y

CONFIG_ARCH_MESON=y

CONFIG_MESON_GXL_PHY=y

# hdmi
CONFIG_DRM_MESON=m
CONFIG_DRM_MESON_DW_HDMI=m
# sound
CONFIG_SND_MESON_GX_SOUND_CARD=m
# network
CONFIG_BRCMFMAC=m
CONFIG_BRCMFMAC_SDIO=y
# mmc
CONFIG_MMC_MESON_GX=y
CONFIG_MMC_MESON_MX_SDIO=y
# bluetooth
CONFIG_BT_HCIUART=m
CONFIG_BT_HCIUART_3WIRE=y
CONFIG_BT_HCIUART_BCM=y

+&sd_emmc_a {
+        max-frequency = <100000000>;
+        sd-uhs-sdr50;
+        //max-frequency = <200000000>;
+        //sd-uhs-sdr104;
+        //max-frequency = <50000000>;
+        //sd-uhs-ddr50;
+};
+
+&sd_emmc_b {
+       status = "disabled";
+};
+
+&ethmac {
+       snps,force_thresh_dma_mode;
+       snps,aal;
+       snps,txpbl = <0x8>;
+       snps,rxpbl = <0x8>;
+};

git clone https://github.com/RPi-Distro/firmware-nonfree.git
git clone https://github.com/RPi-Distro/bluez-firmware.git

#fw_setenv bootcmd "run update"; reboot
#之后PC端的刷机程序就会检测到设备进入刷机模式，按软件的刷机提示刷机即可。

短接->插USB线->上电->取消短接
./aml-flash --img=T1-6.23-fix.img --parts=all
        ./update identify 7
        ./update bulkcmd "     echo 12345"
        ./update identify 7
        ./update rreg 4 0xc8100228
        ./update cwr ./t1/DDR_ENC.USB 0xd9000000
        ./update write usbbl2runpara_ddrinit.bin 0xd900c000
        ./update run 0xd9000000
        sleep 8
        ./update identify 7
        ./update write ./t1/DDR_ENC.USB 0xd9000000
        ./update write usbbl2runpara_runfipimg.bin 0xd900c000
        ./update write ./t1/UBOOT_ENC.USB 0x200c000
        ./update run 0xd9000000
        sleep 8
        ./update mwrite ./t1/_aml_dtb.PARTITION mem dtb normal
        ./update bulkcmd "     disk_initial 0"
        ./update mwrite ./t1/meson1.dtb mem dtb normal
        ./update partition bootloader ./t1/bootloader.PARTITION
# ########################################################
./update identify 7
./update mwrite ./n1/_aml_dtb.PARTITION mem dtb normal
./update bulkcmd "     disk_initial 0"
./update partition bootloader ./n1/bootloader.PARTITION
./update partition boot ./n1/boot.PARTITION normal
./update partition logo ./n1/logo.PARTITION normal
./update partition recovery ./n1/recovery.PARTITION normal
./update partition system ./n1/system.PARTITION sparse
./update bulkcmd "     setenv upgrade_step 1"
./update bulkcmd "     save"
./update bulkcmd "     setenv firstboot 1"
./update bulkcmd "     save"
./update bulkcmd "     rpmb_reset"
./update bulkcmd "     amlmmc erase data"
./update bulkcmd "     nand erase.part data"
./update bulkcmd "     amlmmc erase cache"
./update bulkcmd "     nand erase.part cache"
./update bulkcmd "     burn_complete 1"
设置->媒体盒状态->版本号->连续点击进入开发模式
adb connect ${IPADDR}:5555
adb shell reboot update (!!! aml_autoscript in vfat boot partition)
adb shell
   su
     31183118
ssh -p${PORT} ${IPADDR}
################################################################################
cat > interfaces.hostapd << EOF
auto lo br0
iface lo inet loopback

auto eth0
iface eth0 inet manual

auto wlan0
iface wlan0 inet manual

iface br0 inet dhcp
bridge_ports eth0 wlan0
#hwaddress ether # will be added at first boot
EOF
cat > interfaces.bonding << EOF
auto eth0
iface eth0 inet manual
    bond-master bond0
    bond-primary eth0
    bond-mode active-backup

auto wlan0
iface wlan0 inet manual
    wpa-ssid your_SSID
    wpa-psk xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    # to generate proper encrypted key: wpa_passphrase your_SSID your_password
    bond-master bond0
    bond-primary eth0
    bond-mode active-backup

# Define master
auto bond0
iface bond0 inet dhcp
    bond-slaves none
    bond-primary eth0
    bond-mode active-backup
    bond-miimon 100
EOF

cat > interfaces.router << EOF
auto lo
iface lo inet loopback

auto eth0.101
iface eth0.101 inet manual
    pre-up swconfig dev eth0 set reset 1
    pre-up swconfig dev eth0 set enable_vlan 1
    pre-up swconfig dev eth0 vlan 101 set ports '3 8t'
    pre-up swconfig dev eth0 set apply 1

auto eth0.102
iface eth0.102 inet manual
    pre-up swconfig dev eth0 vlan 102 set ports '0 1 2 4 8t'
    pre-up swconfig dev eth0 set apply 1

allow-hotplug wlan0
iface wlan0 inet manual

# WAN
auto eth0.101
iface eth0.101 inet dhcp

# LAN
auto br0
iface br0 inet static
bridge_ports eth0.102 wlan0
    address 192.168.2.254
    netmask 255.255.255.0
EOF
cat > interfaces.switch << EOF
auto lo
iface lo inet loopback

auto eth0.101
iface eth0.101 inet manual
    pre-up swconfig dev eth0 set reset 1
    pre-up swconfig dev eth0 set enable_vlan 1
    pre-up swconfig dev eth0 vlan 101 set ports '0 1 2 3 4 8t'
    pre-up swconfig dev eth0 set apply 1

auto wlan0
iface wlan0 inet manual

auto br0
iface br0 inet dhcp
bridge_ports eth0.101 wlan0
EOF

aplay -l
pactl list cards
# output soundcard
pactl set-card-profile 0 output:analog-stereo
# export PULSE_SERVER="unix:/run/user/"$USER_ID"/pulse/native"
# sudo -u $USER_NAME pactl --server $PULSE_SERVER set-card-profile 0 output:hdmi-stereo+input:analog-stereo

# output hdmi
pactl set-card-profile 0 output:hdmi-stereo
# login xfce, run  alsamixer -> F6 -> ....
amixer -c  GXP230Q200 sset 'AIU HDMI CTRL SRC' 'I2S'

# via ssh: sudo -u johnyin XDG_RUNTIME_DIR=/run/user/1000
pacmd list-sinks | grep -e 'name:' -e 'index:'
pacmd set-default-sink <sink_name>
# pacmd list-sources for name or index number of possible sources
# pacmd set-default-source "SOURCENAME" | index to set the default input
pacmd set-sink-volume index volume
pacmd set-source-volume index volume for volume control (65536 = 100 %, 0 = mute; or a bit more intuitive 0x10000 = 100 %, 0x7500 = 75 %, 0x0 = 0 %)
# Note: Changing the output sink through the command line interface can only take effect if stream target device reading is disabled.
# This can be done by editing the corresponding line in /etc/pulse/default.pa to:
# load-module module-stream-restore restore_device=false
# Restart PulseAudio for changes to take effect:
pulseaudio -k
