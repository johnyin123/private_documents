#[name]="type" type:R/S/N (router,switch,node)
declare -A MAP_NODES=(
    [R]=R
    [SW]=S
    [srv1]=N
    [srv2]=N
    [cli1]=N
    [cli2]=N
    )
#[node:ip/prefix]=node:ip/prefix
declare -A MAP_LINES=(
    [R:10.0.1.1/24]=SW:
    [srv1:10.0.1.100/24]=SW:
    [srv2:10.0.1.101/24]=SW:
    [cli1:10.0.1.200/24]=SW:
    [cli2:10.0.1.201/24]=SW:
    )
#routes delm ,
declare -A NODES_ROUTES=(
    [srv1]="default via 10.0.1.1"
    [srv2]="default via 10.0.1.1"
    [cli1]="default via 10.0.1.1"
    [cli2]="default via 10.0.1.1"
    )

SESS=ospflb
LAB_DIR=/tmp
VIP=10.0.2.100/32

gen_zebra() {
    local ns=$1
    local inf_addr_lst="${2:-}"
    local password="password"
    cat <<EOF
hostname ${ns}
password ${password}
enable password ${password}
log file /tmp/zebra.log
service password-encryption

$(while read -rd "," -r x; do
    inf=${x%:*}
    addr=${x##*:}
    echo "interface ${inf}"
    echo " ip address ${addr}"
done <<< "${inf_addr_lst:+${inf_addr_lst},}"
)
EOF
}

gen_ospfd() {
    local ns=$1
    local route_id=$2
    local interfaces=$3
    local areas=$4
    local password="password"
    # passive-interface lo (skip lo ospf)

    cat <<EOF
password ${password}
enable password ${password}
log file /tmp/ospf.log
log stdout
log syslog
$(while read -rd "," -r x; do
    echo "interface ${x}"
    echo " ip ospf authentication message-digest"
    echo " ip ospf message-digest-key 1 md5 pass4OSPF"
done <<< "${interfaces},"
)
router ospf
 ospf router-id ${route_id}
 log-adjacency-changes
 passive-interface lo
$(while read -rd "," -r x; do
    echo " network ${x} area 0.0.0.0"
done <<< "${areas},"
)
area 0.0.0.0 authentication message-digest
EOF
}

post_create() {
    local lower="/" overlay= node= window=
    for node in R srv1 srv2; do
        overlay="${LAB_DIR}/${node}"
        mkdir -p "${overlay}"
        setup_overlayfs "${lower}" "${overlay}"
    done

    gen_ospfd "srv1" "10.0.1.100" "srv1-SW" "10.0.1.100/24,${VIP}" > ${LAB_DIR}/srv1/etc/quagga/ospfd.conf
    gen_zebra "srv1" "lo:${VIP}"                   > ${LAB_DIR}/srv1/etc/quagga/zebra.conf
    chown quagga:quagga                                ${LAB_DIR}/srv1/etc/quagga/*
    mkdir -p                                           ${LAB_DIR}/srv1/run/quagga
    chown -R quagga:quagga                             ${LAB_DIR}/srv1/run/quagga
    gen_ospfd "srv2" "10.0.1.101" "srv2-SW" "10.0.1.101/24,${VIP}" > ${LAB_DIR}/srv2/etc/quagga/ospfd.conf
    gen_zebra "srv2" "lo:${VIP}"                   > ${LAB_DIR}/srv2/etc/quagga/zebra.conf
    chown quagga:quagga                                ${LAB_DIR}/srv2/etc/quagga/*
    mkdir -p                                           ${LAB_DIR}/srv2/run/quagga
    chown -R quagga:quagga                             ${LAB_DIR}/srv2/run/quagga
    gen_ospfd "R" "10.0.1.1" "R-SW" "10.0.1.0/24" > ${LAB_DIR}/R/etc/quagga/ospfd.conf
    gen_zebra "R"                                 > ${LAB_DIR}/R/etc/quagga/zebra.conf
    chown quagga:quagga                              ${LAB_DIR}/R/etc/quagga/*
    mkdir -p                                         ${LAB_DIR}/R/run/quagga
    chown -R quagga:quagga                           ${LAB_DIR}/R/run/quagga

    for node in R srv1 srv2; do
        overlay="${LAB_DIR}/${node}"
        maybe_netns_run "bash -s" "${node}" "${overlay}" <<EOF
            mount -t proc none /proc
            #maybe chroot env /dev/null not exist, zebra need it"
            [ -e "/dev/null" ] || mknod -m 666 /dev/null c 1 3
            start-stop-daemon --start --quiet --background --exec /sbin/zebra
            start-stop-daemon --start --quiet --background --exec /sbin/ospfd
EOF
        window=${node}
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}" "${overlay}" || error_msg "maybe_tmux_netns_chroot error\n"
    done
    for node in cli1 cli2; do
        window=${node}
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}"
    done

    return 0;
}

pre_cleanup() {
    local node=
    tmux kill-session -t "${SESS}"

    for node in R srv1 srv2; do
        overlay="${LAB_DIR}/${node}"
        kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "${node}" "${overlay}/")
        kill -9 $(maybe_netns_run "cat /run/quagga/ospfd.pid"  "${node}" "${overlay}/")
        cleanup_overlayfs "${overlay}"
        rm -rf "${overlay}"
    done
    return 0;
}

