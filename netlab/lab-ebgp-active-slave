#[name]="type" type:R/S/N (router,switch,node)
declare -A MAP_NODES=(
    [R1]=R
    [R2]=R
    [R3]=R
    [SW1]=S
    [SW2]=S
    [SW3]=S
    [h3]=N
    [j3]=N
    )
#[node:ip/prefix]=node:ip/prefix
declare -A MAP_LINES=(
    [R1:172.16.16.1/30]=R2:172.16.16.2/30
    [R1:172.16.16.5/30]=R3:172.16.16.6/30
    [R2:172.16.16.9/30]=R3:172.16.16.10/30
    [R1:10.0.1.1/24]=SW1:
    [R2:10.0.2.1/24]=SW2:
    [R3:10.0.3.1/24]=SW3:
    [h3:10.0.3.100/24]=SW3:
    [j3:10.0.3.101/24]=SW3:
    )
#routes delm ,
declare -A NODES_ROUTES=(
    [h3]="default via 10.0.3.1"
    [j3]="default via 10.0.3.1"
    )

SESS=ebgplab
LAB_DIR=/tmp
VIP=10.0.100.100/32

gen_zebra() {
    local ns=$1
    local inf_addr_lst="${2:-}"
    local password="password"
    cat <<EOF
hostname ${ns}
password ${password}
enable password ${password}
log file /tmp/zebra.log
service password-encryption

$(while read -rd "," -r x; do
    inf=${x%:*}
    addr=${x##*:}
    echo "interface ${inf}"
    echo " ip address ${addr}"
done <<< "${inf_addr_lst:+${inf_addr_lst},}"
)
EOF
}

gen_bgpd() {
    local password="password"
    local ns=$1
    local route_id=$2
    local bgp_no=$3
    local network=$4
    #neighbor:neighbor_id,neighbor:neighbor_id.....
    local neighbor_lst=$5

    cat <<EOF
password ${password}
enable password ${password}
log file /tmp/bgp.log
log stdout
log syslog
router bgp ${bgp_no}
 bgp router-id ${route_id}
$(while read -rd "," -r x; do
    [ -z ${x} ] || echo " network $x"
done <<< "${network},"
)
$(while read -rd "," -r x; do
    echo " neighbor ${x%:*} remote-as ${x##*:}"
    echo " neighbor ${x%:*} password ${password}"
    echo " neighbor ${x%:*} description \"to neighbor ${x}\""
done <<< "${neighbor_lst},"
)
EOF
}

post_create() {
    require zebra bgpd start-stop-daemon tmux
    local lower="/" overlay= node= window=
    for node in R1 R2 R3; do
        overlay="${LAB_DIR}/${node}"
        mkdir -p "${overlay}"
        setup_overlayfs "${lower}" "${overlay}"
    done
    gen_bgpd "R1" "172.16.16.5" "65530" "${VIP},10.0.1.0/24" "172.16.16.6:65531" > ${LAB_DIR}/R1/etc/quagga/bgpd.conf
    gen_zebra "R1"  "lo:${VIP}"                            > ${LAB_DIR}/R1/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R1/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R1/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R1/run/quagga
    gen_bgpd "R2" "172.16.16.9" "65530" "${VIP},10.0.2.0/24" "172.16.16.10:65531" > ${LAB_DIR}/R2/etc/quagga/bgpd.conf
    gen_zebra "R2"  "lo:${VIP}"                            > ${LAB_DIR}/R2/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R2/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R2/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R2/run/quagga
    gen_bgpd "R3" "10.0.3.1" "65531" "10.0.3.0/24" "172.16.16.5:65530,172.16.16.9:65530" > ${LAB_DIR}/R3/etc/quagga/bgpd.conf
    gen_zebra "R3"                                       > ${LAB_DIR}/R3/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R3/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R3/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R3/run/quagga

    for node in R1 R2 R3; do
        maybe_netns_run "bash -s" "${node}" "${LAB_DIR}/${node}" <<EOF
            mount -t proc none /proc
            #maybe chroot env /dev/null not exist, zebra need it"
            [ -e "/dev/null" ] || mknod -m 666 /dev/null c 1 3
            start-stop-daemon --start --quiet --background --exec /sbin/zebra
            start-stop-daemon --start --quiet --background --exec /sbin/bgpd
EOF
        window=${node}
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}" "${LAB_DIR}/${node}"
    done
    for node in h3 j3; do
        window=${node}
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}"
    done

    return 0;
}

pre_cleanup() {
    local node=
    tmux kill-session -t "${SESS}"

    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R1" "${LAB_DIR}/R1/")
    kill -9 $(maybe_netns_run "cat /run/quagga/bgpd.pid"  "R1" "${LAB_DIR}/R1/")
    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R2" "${LAB_DIR}/R2/")
    kill -9 $(maybe_netns_run "cat /run/quagga/bgpd.pid"  "R2" "${LAB_DIR}/R2/")
    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R3" "${LAB_DIR}/R3/")
    kill -9 $(maybe_netns_run "cat /run/quagga/bgpd.pid"  "R3" "${LAB_DIR}/R3/")

    for node in R1 R2 R3; do
        overlay="${LAB_DIR}/${node}"
        cleanup_overlayfs "${overlay}"
#        rm -rf "${LAB_DIR}/${node}"
    done
    return 0;
}

