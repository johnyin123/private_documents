#[name]="type" type:R/S/N (router,switch,node)
declare -A MAP_NODES=(
    [R1]=R
    [R2]=R
    [R3]=R
    [SW1]=S
    [SW2]=S
    [SW3]=S
    [h1]=N
    [j1]=N
    [h2]=N
    [j2]=N
    [h3]=N
    [j3]=N
    )
#[node:ip/prefix]=node:ip/prefix
declare -A MAP_LINES=(
    [R1:172.16.16.1/30]=R2:172.16.16.2/30
    [R1:172.16.16.5/30]=R3:172.16.16.6/30
    [R2:172.16.16.9/30]=R3:172.16.16.10/30
    [R1:10.0.1.1/24]=SW1:
    [R2:10.0.2.1/24]=SW2:
    [R3:10.0.3.1/24]=SW3:
    [h1:10.0.1.100/24]=SW1:
    [j1:10.0.1.101/24]=SW1:
    [h2:10.0.2.100/24]=SW2:
    [j2:10.0.2.101/24]=SW2:
    [h3:10.0.3.100/24]=SW3:
    [j3:10.0.3.101/24]=SW3:
    )
#routes delm ,
declare -A NODES_ROUTES=(
    [h1]="default via 10.0.1.1"
    [j1]="default via 10.0.1.1"
    [h2]="default via 10.0.2.1"
    [j2]="default via 10.0.2.1"
    [h3]="default via 10.0.3.1"
    [j3]="default via 10.0.3.1"
    )

SESS=ospflab
LAB_DIR=/tmp

gen_zebra() {
    local ns=$1
    local password="password"
    cat <<EOF
hostname ${ns}
password ${password}
enable password ${password}
log file /tmp/zebra.log
service password-encryption
EOF
}

gen_ospfd() {
    local ns=$1
    local route_id=$2
    local interfaces=$3
    local areas=$4
    local password="password"
    # passive-interface lo (skip lo ospf)

    cat <<EOF
password ${password}
enable password ${password}
log file /tmp/ospf.log
log stdout
log syslog
$(while read -rd "," -r x; do
    echo "interface ${x}"
    echo " ip ospf authentication message-digest"
    echo " ip ospf message-digest-key 1 md5 pass4OSPF"
done <<< "${interfaces},"
)
router ospf
 ospf router-id ${route_id}
 log-adjacency-changes
 passive-interface lo
$(while read -rd "," -r x; do
    echo " network ${x} area 0.0.0.0"
done <<< "${areas},"
)
area 0.0.0.0 authentication message-digest
EOF
}

post_create() {
    local lower="/" overlay= node= window=
    for node in R1 R2 R3; do
        overlay="${LAB_DIR}/${node}"
        mkdir -p "${overlay}"
        setup_overlayfs "${lower}" "${overlay}"
    done

    gen_ospfd "R1" "10.0.1.1" "R1-R2,R1-R3" "10.0.1.0/24,172.16.16.1/30,172.16.16.5/30" > ${LAB_DIR}/R1/rootfs/etc/quagga/ospfd.conf
    gen_zebra "R1"                                       > ${LAB_DIR}/R1/rootfs/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R1/rootfs/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R1/rootfs/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R1/rootfs/run/quagga
    gen_ospfd "R2" "10.0.2.1" "R2-R1,R2-R3" "10.0.2.0/24,172.16.16.9/30,172.16.16.2/30" > ${LAB_DIR}/R2/rootfs/etc/quagga/ospfd.conf
    gen_zebra "R2"                                       > ${LAB_DIR}/R2/rootfs/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R2/rootfs/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R2/rootfs/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R2/rootfs/run/quagga
    gen_ospfd "R3" "10.0.3.1" "R3-R1,R3-R2" "10.0.3.0/24,172.16.16.6/30,172.16.16.10/30" > ${LAB_DIR}/R3/rootfs/etc/quagga/ospfd.conf
    gen_zebra "R3"                                       > ${LAB_DIR}/R3/rootfs/etc/quagga/zebra.conf
    chown quagga:quagga                                    ${LAB_DIR}/R3/rootfs/etc/quagga/*
    mkdir -p                                               ${LAB_DIR}/R3/rootfs/run/quagga
    chown -R quagga:quagga                                 ${LAB_DIR}/R3/rootfs/run/quagga

    maybe_netns_run "zebra -d"  "R1" "${LAB_DIR}/R1/rootfs/"
    maybe_netns_run "ospfd -d"  "R1" "${LAB_DIR}/R1/rootfs/"
    maybe_netns_run "zebra -d"  "R2" "${LAB_DIR}/R2/rootfs/"
    maybe_netns_run "ospfd -d"  "R2" "${LAB_DIR}/R2/rootfs/"
    maybe_netns_run "zebra -d"  "R3" "${LAB_DIR}/R3/rootfs/"
    maybe_netns_run "ospfd -d"  "R3" "${LAB_DIR}/R3/rootfs/"

    tmux new-session -d -s "${SESS}";
    for node in R1 R2 R3; do
        window=${node}
        tmux new-window -t "${SESS}" -n "${window}"
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}" "${LAB_DIR}/${node}/rootfs/"
    done
    for node in h1 j3; do
        window=${node}
        tmux new-window -t "${SESS}" -n "${window}"
        maybe_tmux_netns_chroot "${SESS}" "${window}" "${node}"
    done

    return 0;
}

pre_cleanup() {
    local node=
    tmux kill-session -t "${SESS}"

    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R1" "${LAB_DIR}/R1/rootfs/")
    kill -9 $(maybe_netns_run "cat /run/quagga/ospfd.pid"  "R1" "${LAB_DIR}/R1/rootfs/")
    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R2" "${LAB_DIR}/R2/rootfs/")
    kill -9 $(maybe_netns_run "cat /run/quagga/ospfd.pid"  "R2" "${LAB_DIR}/R2/rootfs/")
    kill -9 $(maybe_netns_run "cat /run/quagga/zebra.pid"  "R3" "${LAB_DIR}/R3/rootfs/")
    kill -9 $(maybe_netns_run "cat /run/quagga/ospfd.pid"  "R3" "${LAB_DIR}/R3/rootfs/")

    for node in R1 R2 R3; do
        overlay="${LAB_DIR}/${node}"
        cleanup_overlayfs "${overlay}"
#        rm -rf "${LAB_DIR}/${node}"
    done
    return 0;
}

