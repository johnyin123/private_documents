download_minio() {
    echo "download server"
    curl -o /usr/bin/minio https://dl.min.io/server/minio/release/linux-amd64/minio
    echo "download cli client"
    curl -o /usr/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc

    mc alias set test-minio https://minio.test.io:9000 ${user} PassMinioStorage
    mc ${user} info test-minio
    mc ls test-minio
    echo "check the list of files on the 'test-bucket'"
    mc ls test-minio/test-bucket
    echo "create a new bucket 'test-bucket2' on the 'test-minio' server"
    mc mb test-minio/test-bucket2
    touch test.txt
    mc cp test.txt test-minio/test-bucket2
    mc ls test-minio/test-bucket2
}

gen_service() {
    cat <<EOF | tee /etc/default/minio
MINIO_ROOT_USER="${user}"
MINIO_ROOT_PASSWORD="${password}"
MINIO_VOLUMES="/minio-data"
MINIO_OPTS="-C /etc/minio --address :9000 --console-address :9001"
MINIO_SERVER_URL="https://minio.test.io:9000"
EOF
    cat <<'EOF' | tee /lib/systemd/system/minio.service
[Unit]
Description=Minio
Documentation=https://docs.minio.io
Wants=network-online.target
After=network-online.target
AssertFileIsExecutable=/usr/bin/minio

[Service]
WorkingDirectory=/usr/

User=minio
Group=minio

EnvironmentFile=-/etc/default/minio
ExecStartPre=/bin/bash -c "if [ -z \"${MINIO_VOLUMES}\" ]; then echo \"Variable MINIO_VOLUMES not set in /etc/default/minio\"; exit 1; fi"

ExecStart=/usr/bin/minio server $MINIO_OPTS $MINIO_VOLUMES

# Let systemd restart this service always
Restart=always

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Disable timeout logic and wait until the process is stopped
TimeoutStopSec=infinity
SendSIGKILL=no

[Install]
WantedBy=multi-user.target
EOF
    systemctl daemon-reload
    # systemctl enable minio --now
}
