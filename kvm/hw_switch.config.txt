# juniper EX4200 802.3ad  xmit_hash_policy=layer3+4
configure
edit system services
set web-management http port 8888
commit

EX4200T-VC-01-133.10> show configuration | display set | grep ge-2/0/44
set interfaces ge-2/0/44 disable
set interfaces ge-2/0/44 ether-options 802.3ad ae5
set interfaces ge-3/0/44 disable
set interfaces ge-3/0/44 ether-options 802.3ad ae5
set interfaces ae5 aggregated-ether-options lacp active
set interfaces ae5 unit 0 family ethernet-switching port-mode trunk
set interfaces ae5 unit 0 family ethernet-switching vlan members all
#set interfaces ae0 unit 0 family inet address 172.16.16.1/30 (三层)

#ospf
set routing-options router-id 1.1.1.1
set protocols ospf area 0.0.0.0 area-range 192.168.167.0/24
set protocols ospf area 0.0.0.0 interface ae0.0
set protocols ospf area 0.0.0.0 interface ae0.0 authentication md5 1 key keypassword
lab# show protocols ospf
area 0.0.0.0 {
    area-range 192.168.167.0/24;
    interface ae0.0 {
        authentication {
            md5 1 key "$9$YUoZjmPQF/t.P5F/9B1Ndb2Zj6/t01hk."; ## SECRET-DATA
        }
    }
}

# H3C交换机
********************************************************************************
*                                                                              *
*                   H3C S6520X-30QC-EI BOOTROM, Version 118                    *
*                                                                              *
********************************************************************************
Copyright (c) 2004-2021 New H3C Technologies Co., Ltd.

Creation Date       : Aug 16 2021, 17:47:05
CPU Clock Speed     : 1600MHz
Memory Size         : 2048MB
Flash Size          : 1024MB
CPLD Version        : 001/003
PCB Version         : Ver.A

********************************************************************************
*                                                                              *
*                     H3C S6300-42QT BOOTROM, Version 132                      *
*                                                                              *
********************************************************************************
Copyright (c) 2004-2014 Hangzhou H3C Technologies Co., Ltd.

Creation Date   : Apr 22 2014,13:54:50
CPU Clock Speed : 1000MHz
Memory Size     : 2048MB
Flash Size      : 512MB
CPLD Version    : 003/003
PCB Version     : Ver.B

    <H3C>system-view
    [H3C]sysname tsd01
    [tsd01]local-user admin (admin/tsd01_password)
    [tsd01-luser-manage-admin]password simple tsdpassword@2023
    [tsd01-luser-manage-admin]service-type http https ssh
    [tsd01-luser-manage-admin]authorization-attribute user-role network-admin
    [tsd01-luser-manage-admin]quit
    [tsd01]interface M-GigabitEthernet 0/0/0
    [tsd01-M-GigabitEthernet0/0/0]ip address 10.170.6.201 24
    [tsd01-M-GigabitEthernet0/0/0]quit
    [tsd01]ip http enable
    [tsd01]ip https enable
    [tsd01]ssh server enable
    [tsd01]line vty 0 63
    [tsd01-line-vty0-63]authentication-mode scheme
    [tsd01-line-vty0-63]quit
    [tsd01]save force


  # Init
    reset saved-configuration
    reboot

  #配置双线连接堆叠
    SW1配置:
      1.将优先级调整为32;确保该设备被选举为Master;若不需要指定主设备可以略过
        irf member 1 priority 32
      2.关闭要加入的IRF的物理端口
        show interface brief / display interface brief
        interface FGE1/0/25
        shutdown
        quit
        interface FGE1/0/26
        shutdown
        quit
      3.创建IRF逻辑虚接口(设备号默认为1,端口号为2),把相连物理接口加入IRF
        irf-port 1/2
        port group interface FGE1/0/25
        port group interface FGE1/0/26
        quit
      4.重新打开物理端口
        interface FGE1/0/25
        undo shutdown
        quit
        interface FGE1/0/26
        undo shutdown
        quit
      5.激活IRF设置并保存配置
        irf-port-configuration active
        save force
    SW2配置:
      1.更改默认的设备号1为2并重启
        irf member 3 renumber 2
        reboot
      2.关闭要加入的IRF的物理端口
        interface FGE2/0/25
        shutdown
        quit
        interface FGE2/0/26
        shutdown
        quit
      3.创建IRF逻辑虚接口(设备号为2,端口号为1),把相连物理接口加入IRF
        irf-port 2/1
        port group interface FGE2/0/25
        port group interface FGE2/0/26
        quit
      4.重新打开物理端口,保存配置
        interface FGE2/0/25
        undo shutdown
        quit
        interface FGE2/0/26
        undo shutdown
        quit
      5.激活IRF设置,激活配置后,slave设备会自动重启
        save f
        irf-port-configuration active
    验证配置,查看状态
        display irf

  # 创建二层聚合接口1,并配置该接口为动态聚合模式
    system-view
    interface bridge-aggregation 1
    quit
    interface XGE1/0/1
    port link-aggregation group 1
    quit
    interface XGE2/0/1
    port link-aggregation group 1
    quit
    interface bridge-aggregation 1
    link-aggregation mode dynamic
    port link-type trunk
    port trunk permit vlan all
    display link-aggregation member-port
    ######################################## 
    MVRP:多VLAN注册,端口注册模式
    Normal模式：MVRP实体允许进行动态VLAN的注册或注销。可传递和动态学习所有VLAN 端口，MVRP默认模式是Normal模式
    Fixed模式：MVRP实体禁止进行动态VLAN的注销，收到的MVRP报文会被丢弃。只传递VLAN1和静态VLAN，不动态学习VLAN
    Forbidden模式：MVRP实体禁止进行动态VLAN的注册，收到的MVRP报文会被丢弃。只传递VLAN1。
    [SW1]mvrp global enable
    [SW1]int g1/0/1
    [SW1-GigabitEthernet1/0/1]mvrp enable
    [SW1-GigabitEthernet1/0/1]mvrp registration fixed //模式为fixed，则该接口不学习其他交换机的vlan信息
    sys
    interface bridge-aggregation 1
    link-aggregation mode dynamic
    # 配置二层聚合接口1为Trunk端口,并允许VLAN 10和20的报文通过。
    interface bridge-aggregation 1
    port link-type trunk
    port trunk permit vlan all/10 20
    quit
  # 配置全局按照报文的源MAC地址和目的MAC地址进行聚合负载分担。
    link-aggregation load-sharing mode source-mac destination-mac
    display link-aggregation summary
    display link-aggregation load-sharing mode
    # 分别将端口GigabitEthernet1/0/1,GigabitEthernet1/0/2加入到聚合组1中。
    interface gigabitethernet 1/0/1
    port link-aggregation group 1
    quit
    interface gigabitethernet 1/0/2
    port link-aggregation group 1
    quit
  # SSH登录公钥+密码认证
    public-key local create rsa
    local-user h3c
    password cipher h3c
    service-type ssh level 3
    # 公钥文件名mypubkey上传到交换机
    public-key peer xx import sshkey mypubkey
    ssh user h3c assign publickey xx
    ssh user h3c service-type stelnet
    ssh user h3c authentication-type password-publickey
  # OSPF
    <SWA>system-view
    vlan 100
    port GigabitEthernet 1/0/1
    quit
    vlan 200
    port GigabitEthernet 1/0/2
    quit
    interface vlan 100
    ip address 192.168.0.1 255.255.255.0
    quit
    interface vlan 200
    ip address 192.168.1.1 255.255.255.0
    quit
    # 启动ospf协议，并设置路由器的router id
    ospf 1 router-id 192.168.1.1
    #配置区域0并且发布网段
    area 0
    network 192.168.0.0 0.0.0.255
    authentication-mode md5 1 plain 123456
    # authentication-mode { hmac-md5 | md5 } key-id { cipher | plain } string
    quit
    quit
    display ip routing-table protocol ospf
    interface interface-type interface-number
    ospf network-type broadcast
    ospf dr-priority priority
    display ospf peer
    display ip routing-table protocol ospf
    #保存配置
    save force

    ### Pre-Config Generator Start ###
    system-view
    ### Pre-Config Generator End
    ### Sysname Generator Start ###
    sysname Test_Switch_01
    ### Sysname Generator End ###
    ### Vlan Generator Start ###
    vlan 10
    vlan 20
    vlan 30
    vlan 50 to 100
    ### Vlan Generator End ###
    ### SSH Generator Start ###
    local-user admin
    password simple password
    service-type ssh
    authorization-attribute user-role network-admin
    #
    ssh server enable
    #
    line vty 0 63
    authentication-mode scheme
    #
    ### SSH Generator End ###
    ### SVI Generator Start ###
    interface Vlan-interface10
    ip address 10.10.10.254 255.255.255.0
    ### SVI Generator End ###
    ### SVI Generator Start ###
    interface Vlan-interface20
    ip address 10.10.20.254 255.255.255.0
    ### SVI Generator End ###
    ### Link Aggregation Generator Start ###
    int bri 1
    link-aggregation mode dynamic
    port link-type trunk
    undo port trunk permit vlan 1
    port trunk permit vlan 30
    #
    int range G1/0/25 G1/0/26
    port link-type trunk
    undo port trunk permit vlan 1
    port trunk permit vlan 30
    port link-agg group 1
    ### Link Aggregation Generator End ###
    ### Default Route Generator Start ###
    ip route-static 0.0.0.0 0.0.0.0 20.20.20.254
    ### Default Route Generator End ###
    ### Static Route Generator Start ###
    ip route-static 20.20.20.0 255.255.255.0 vlan10
    ### Static Route Generator End ###
    ### SNMP Generator Start ###
    snmp-agent sys-info version v2c
    snmp-agent community read public
    snmp-agent community write private
    snmp-agent trap enable
    snmp-agent target-host trap address udp-domain 20.20.20.254 params securityname public v2c
    ### SNMP Generator End ###
    ### Access Port Generator Start ###
    int range G0/0/1 to G0/0/48
    port access vlan 30
    ### Access Port Generator End ###

#华为交换:
    ## 创建VLAN
        system-view
        vlan 100
        quit
    ## 将端口加入到vlan中
        interface GigabitEthernet2/0/1
        port link-type access
        port default vlan 100
        quit
    ## 交换机配置IP地址
        interface Vlanif100
        ip address 192.168.1.1 255.255.255.0
        quit
    ## 配置默认网关
        ip route-static 0.0.0.0 0.0.0.0 192.168.1.254
    ## 交换机保存设置和重置命令
        save    //保存配置信息
        reset saved-configuration   //重置交换机的配置
        reboot   //重新启动交换机

    ## 交换机常用的显示命令
        ### 用户视图模式下：
            display current-configuration   //显示现在交换机正在运行的配置明细
            display device    //显示各设备状态
            display interface xxx  //显示个端口状态，用？可以查看后边跟的选项
            display version   //查看交换机固件版本信息
            display vlan xxx   // 查看vlan的配置信息

############################################################
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display current-configuration')
print(output)
net_connect.disconnect()

# 配置华为交换机
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}

net_connect = ConnectHandler(**huawei_switch)
config_commands = ['interface gigabitethernet 0/0/1', 'ip address 192.168.2.1 255.255.255.0']
output = net_connect.send_config_set(config_commands)
print(output)
net_connect.disconnect()

# 查看华为交换机端口信息
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1')
print(output)
net_connect.disconnect()

# 查看华为交换机接口状态
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1')
if 'Line protocol state' in output and 'UP' in output:
    print('Interface is UP')
else:
    print('Interface is DOWN')
net_connect.disconnect()

# 查看华为交换机 ARP 表
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display arp')
print(output)
net_connect.disconnect()

# 查看华为交换机 CPU 使用率
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display cpu-usage')
print(output)
net_connect.disconnect()

# 查看华为交换机内存使用情况
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display memory-usage')
print(output)
net_connect.disconnect()

# 查看华为交换机端口带宽利用率
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1 | include "Input rate|"Output rate"')
print(output)
net_connect.disconnect()

# 查看华为交换机 VLAN 信息
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display vlan')
print(output)
net_connect.disconnect()

# 查看华为交换机MAC表
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display mac-address')
print(output)
net_connect.disconnect()
################################################################################
# # neteye fw NISG-5200
show current-config
configure mode override
user administrator admin logintype web,ssh
interface ethernet eth0

### 未实现域内NAT
tsdneteye@root> show current-config
Build running configuration...

Current configuration is : 6145 bytes
[nsh]
hostname tsdneteye
banner console Neusoft NetEye
banner vty Neusoft NetEye
console timeout 10
vty timeout 10
[land-region]
language Chinese
[otp-token]
[user]
password cipher 2bb01646a51a629a5f4d49d45a5c6a0a22090c
user administrator admin administrator authtype local logintype web,ssh,telnet password cipher fb8e17c21690f0395c504f8815ff5ea075
505f
user administrator admin e-key disable
user administrator admin otp-auth disable
user administrator admin description Default Administrator
[ifnet]
#
vlan 1
ip address 10.170.73.2 255.255.255.252 
#
vlan 999
ip address 192.168.167.1 255.255.255.0 
#
interface ethernet eth0
working-type layer3-interface
ip address 10.142.9.162 255.255.255.252 
#
interface ethernet eth1
flow control on
port access vlan 1
#
interface ethernet eth2
port access vlan 1
#
interface ethernet eth3
port access vlan 1
#
interface ethernet eth4
port access vlan 999
#
interface ethernet eth5
port access vlan 999
#
interface ethernet eth6
port access vlan 1
#
interface ethernet eth7
port access vlan 1
[vsys]
vsys root
description Default vsys of firewall system
[snooping]
vlan 1
  igmp-snooping off
  igmp-snooping version ethernet 7 auto
  igmp-snooping interface-flags ethernet 7 negotiate
  igmp-snooping version ethernet 6 auto
  igmp-snooping interface-flags ethernet 6 negotiate
  igmp-snooping version ethernet 3 auto
  igmp-snooping interface-flags ethernet 3 negotiate
  igmp-snooping version ethernet 2 auto
  igmp-snooping interface-flags ethernet 2 negotiate
  igmp-snooping version ethernet 1 auto
  igmp-snooping interface-flags ethernet 1 negotiate
vlan 999
  igmp-snooping off
  igmp-snooping version ethernet 4 auto
  igmp-snooping interface-flags ethernet 4 negotiate
  igmp-snooping version ethernet 5 auto
  igmp-snooping interface-flags ethernet 5 negotiate
[dvmrp]
dvmrp disable
dvmrp pim disable
dvmrp cache-lifetime 300
dvmrp prune-lifetime 7200
interface ethernet 0
  dvmrp off
  dvmrp metric 1
  dvmrp threshold 1
vlan 1
  dvmrp off
  dvmrp metric 1
  dvmrp threshold 1
vlan 999
  dvmrp off
  dvmrp metric 1
  dvmrp threshold 1
[zone]
zone WAN
zone LAN
[auth-server]
[service-access]
#
service root-net-login enable
service web port 443
service ssh port 22
service telnet port 23
service web on
service ping on
service ssh on
service telnet off
[service]
#
service web allow zone LAN 0.0.0.0 255.255.255.255
service ping allow zone LAN 0.0.0.0 255.255.255.255
service ssh allow zone LAN 0.0.0.0 255.255.255.255
[auth-config]
server authentication type administrator Local
server authentication type authuser Local
unset server account
[object]
[ha]
[dynamic-route_virroute]
[vpnippool]
[network-user]
user authuser default configuration auth
user authuser default configuration ipsecvpn
user authuser default configuration assigned-ip none
[vpnusergroup]
[vpn-tunnel]
vpn
tunnel rroute off
[vpn-tunnelgroup]
[vpn-manualtunnel]
[vpn-gretunnel]
[vpngroup]
[sslvpn-group]
sslvpn
group verify-client-certificate disable
[sslvpn-app]
[sslvpn-temp]
[sslvpn-service]
[sslvpn-tunnel]
[device-tunnel]
[device_in_zone]
zone WAN based-layer3 eth0
zone LAN based-layer3 vlan1,vlan999
[dns]
[dns-proxy]
[dns-cache]
dns cache-state off
[snat]
#
policy snat def_lw netmask 172.16.0.0 255.255.248.0 iplist 10.170.26.10-10.170.26.19 napt enable 1
policy snat def_lw matching input-interface vlan1
policy snat def_lw matching output-interface eth0
policy snat def_lw matching dip anyipv4
[dnat]
#
policy dnat ELB443 10.170.26.2  TCP 443 172.16.0.2 443 enable 1
policy dnat ELB443 matching sip anyipv4
policy dnat ELB80 10.170.26.2  TCP 80 172.16.0.2 80 enable 2
policy dnat ELB80 matching sip anyipv4
policy dnat PPTP 10.170.26.5  TCP 1723 172.16.0.5 1723 enable 3
policy dnat PPTP matching sip anyipv4
policy dnat openvpn 10.170.26.5  UDP 1194 172.16.0.6 1194 enable 4
policy dnat openvpn matching sip anyipv4
[mip]
#
nat protect enable
[time]
timezone 392
[snmp]
snmp port 161
snmp daemon off
[certificate]
[attack-defense]
customize-the-size-of-IP-datagrams-to-send active off threshold 1400
arp-filter eth1 off
arp-filter eth2 off
arp-filter eth3 off
arp-filter eth4 off
arp-filter eth5 off
arp-filter eth6 off
arp-filter eth7 off
[dhcp-interface]
[dhcp-subnet]
[dhcp-snooping]
[static-route]
route 10.170.24.0 255.255.255.0 gateway 10.170.73.1 1
route 10.170.25.0 255.255.255.0 gateway 10.170.73.1 1
route 10.170.27.0 255.255.255.0 gateway 10.170.73.1 1
route 10.170.28.0 255.255.255.0 gateway 10.170.73.1 1
route 10.170.29.0 255.255.255.0 gateway 10.170.73.1 1
route 172.16.0.0 255.255.248.0 gateway 10.170.73.1 1
route 172.16.17.0 255.255.255.0 gateway 10.170.73.1 1
route 0.0.0.0 0.0.0.0 gateway 10.142.9.161 1
route source-check disable
[policy-route]
[multicast-route]
[access-policies]
policy default inter-zone access permit
timeout TCP FIN 120
timeout UDP 60
timeout TCP CLOSING 10
timeout TCP SYN 120
timeout TCP ESTED 3600
timeout ICMP 3
policy access def_lw LAN any WAN any any any permit enable 1
policy access def_lw log on
policy access def_wl WAN any LAN any any any permit enable 2
policy access def_wl log on
[session-policies]
[multicast-policies]
[dynamic-route]
route-map rebuild reference
[ip-mac]
policy default ip-mac permit
policy ip-mac dhcp-ip-mac disable
[webauthconfig]
webauth banner success Congratulations! You have successfully logged in.
webauth banner fail Sorry. Your login failed.
webauth auth-port 4325
[package-update]
package upgrade server nts.neusoft.com/autoupdate
package upgrade mode never
[dhcpv6]
[arp]
[cam]
[logmaitain]
logging media switch to HD
logging policy delete
[vnet]
[stp]
spanning-tree disable
[ha-cluster]
cluster
sync interface election off
[device-communicate]
[ddns]
[asymmetric-link]
asymmetric link disable
[httpd-prefork]
httpd perfork minspareservers 1 maxspareservers 3 maxrequestworkers 5
[alarm]
alert-config local-syslog internal level Warning,Emergency,Error,Critical,Alert type any
[vpn_resource]



# # IPIP
配置准备
在开始下面的配置之前，请确保Switch A和Switch B上已经创建相应的VLAN接口，且两者之间IPv4报文路由可达。
4. 配置步骤
(1)     配置Switch A
# 配置接口Twenty-FiveGigE1/0/1加入VLAN100。
<SwitchA> system-view
[SwitchA] vlan 100
[SwitchA-vlan100] port twenty-fivegige 1/0/1
[SwitchA-vlan100] quit
# 配置接口Vlan-interface100的地址。
[SwitchA] interface vlan-interface 100
[SwitchA-Vlan-interface100] ip address 10.1.1.1 255.255.255.0
[SwitchA-Vlan-interface100] quit
# 配置接口Twenty-FiveGigE1/0/2（隧道的实际物理接口）加入VLAN101。
[SwitchA] vlan 101
[SwitchA-vlan101] port twenty-fivegige 1/0/2
[SwitchA-vlan101] quit
# 配置接口Vlan-interface101的IP地址。
[SwitchA] interface vlan-interface 101
[SwitchA-Vlan-interface101] ip address 2.1.1.1 255.255.255.0
[SwitchA-Vlan-interface101] quit
# 创建业务环回组1，并配置服务类型为tunnel。
[SwitchA] service-loopback group 1 type tunnel
# 将接口Twenty-FiveGigE1/0/3加入业务环回组1。
[SwitchA] interface twenty-fivegige 1/0/3
[SwitchA-Twenty-FiveGigE1/0/3] port service-loopback group 1
[SwitchA-Twenty-FiveGigE1/0/3] quit
# 创建模式为IPv4 over IPv4隧道的接口Tunnel1。
[SwitchA] interface tunnel 1 mode ipv4-ipv4
# 配置Tunnel1接口的IP地址。
[SwitchA-Tunnel1] ip address 10.1.2.1 255.255.255.0
# 配置Tunnel1接口的源端地址（Vlan-interface101的IP地址）。
[SwitchA-Tunnel1] source 2.1.1.1
# 配置Tunnel1接口的目的端地址（Switch B的Vlan-interface101的IP地址）。
[SwitchA-Tunnel1] destination 3.1.1.1
[SwitchA-Tunnel1] quit
# 配置从Switch A经过Tunnel1接口到Group 2的静态路由。
[SwitchA] ip route-static 10.1.3.0 255.255.255.0 tunnel 1
(2)     配置Switch B
# 配置接口Twenty-FiveGigE1/0/1加入VLAN100。
<SwitchB> system-view
[SwitchB] vlan 100
[SwitchB-vlan100] port twenty-fivegige 1/0/1
[SwitchB-vlan100] quit
# 配置接口Vlan-interface100的IP地址。
[SwitchB] interface vlan-interface 100
[SwitchB-Vlan-interface100] ip address 10.1.3.1 255.255.255.0
[SwitchB-Vlan-interface100] quit
# 配置接口Twenty-FiveGigE1/0/2（隧道的实际物理接口）加入VLAN101。
[SwitchB] vlan 101
[SwitchB-vlan101] port twenty-fivegige 1/0/2
[SwitchB-vlan101] quit
# 配置接口Vlan-interface101的IP地址。
[SwitchB] interface vlan-interface 101
[SwitchB-Vlan-interface101] ip address 3.1.1.1 255.255.255.0
[SwitchB-Vlan-interface101] quit
# 创建业务环回组1，并配置服务类型为tunnel。
[SwitchB] service-loopback group 1 type tunnel
# 将接口Twenty-FiveGigE1/0/3加入业务环回组1。
[SwitchB] interface twenty-fivegige 1/0/3
[SwitchB-Twenty-FiveGigE1/0/3] port service-loopback group 1
[SwitchB-Twenty-FiveGigE1/0/3] quit
# 创建模式为IPv4 over IPv4隧道的接口Tunnel2。
[SwitchB] interface tunnel 2 mode ipv4-ipv4
# 配置Tunnel2接口的IP地址。
[SwitchB-Tunnel2] ip address 10.1.2.2 255.255.255.0
# 配置Tunnel2接口的源端地址（Vlan-interface101的IP地址）。
[SwitchB-Tunnel2] source 3.1.1.1
# 配置Tunnel2接口的目的端地址（SwitchA的Vlan-interface101的IP地址）。
[SwitchB-Tunnel2] destination 2.1.1.1
[SwitchB-Tunnel2] quit
# 配置从Switch B经过Tunnel2接口到Group 1的静态路由。
[SwitchB] ip route-static 10.1.1.0 255.255.255.0 tunnel 2
5. 验证配置
# 完成上述配置后，在Switch A和Switch B上分别执行display interface tunnel命令，可以看出Tunnel接口处于up状态。（具体显示信息略）
# 从Switch A和Switch B上可以Ping通对端的Vlan-interface100接口的IPv4地址。下面仅以Switch A为例。
[SwitchA] ping -a 10.1.1.1 10.1.3.1
Ping 10.1.3.1 (10.1.3.1) from 10.1.1.1: 56 data bytes, press CTRL_C to break
56 bytes from 10.1.3.1: icmp_seq=0 ttl=255 time=2.000 ms
56 bytes from 10.1.3.1: icmp_seq=1 ttl=255 time=1.000 ms
56 bytes from 10.1.3.1: icmp_seq=2 ttl=255 time=0.000 ms
56 bytes from 10.1.3.1: icmp_seq=3 ttl=255 time=1.000 ms
56 bytes from 10.1.3.1: icmp_seq=4 ttl=255 time=1.000 ms
--- Ping statistics for 10.1.3.1 ---
5 packet(s) transmitted, 5 packet(s) received, 0.0% packet loss
round-trip min/avg/max/std-dev = 0.000/1.000/2.000/0.632 ms
