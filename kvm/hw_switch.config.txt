# juniper EX4200 802.3ad  xmit_hash_policy=layer3+4
configure
edit system services
set web-management http port 8888
commit

EX4200T-VC-01-133.10> show configuration | display set | grep ge-2/0/44
set interfaces ge-2/0/44 disable
set interfaces ge-2/0/44 ether-options 802.3ad ae5
set interfaces ge-3/0/44 disable
set interfaces ge-3/0/44 ether-options 802.3ad ae5
set interfaces ae5 aggregated-ether-options lacp active
set interfaces ae5 unit 0 family ethernet-switching port-mode trunk
set interfaces ae5 unit 0 family ethernet-switching vlan members all
#set interfaces ae0 unit 0 family inet address 172.16.16.1/30 (三层)

#ospf
set routing-options router-id 1.1.1.1
set protocols ospf area 0.0.0.0 area-range 192.168.167.0/24
set protocols ospf area 0.0.0.0 interface ae0.0
set protocols ospf area 0.0.0.0 interface ae0.0 authentication md5 1 key keypassword
lab# show protocols ospf
area 0.0.0.0 {
    area-range 192.168.167.0/24;
    interface ae0.0 {
        authentication {
            md5 1 key "$9$YUoZjmPQF/t.P5F/9B1Ndb2Zj6/t01hk."; ## SECRET-DATA
        }
    }
}

# H3C交换机
********************************************************************************
*                                                                              *
*                   H3C S6520X-30QC-EI BOOTROM, Version 118                    *
*                                                                              *
********************************************************************************
Copyright (c) 2004-2021 New H3C Technologies Co., Ltd.

Creation Date       : Aug 16 2021, 17:47:05
CPU Clock Speed     : 1600MHz
Memory Size         : 2048MB
Flash Size          : 1024MB
CPLD Version        : 001/003
PCB Version         : Ver.A

********************************************************************************
*                                                                              *
*                     H3C S6300-42QT BOOTROM, Version 132                      *
*                                                                              *
********************************************************************************
Copyright (c) 2004-2014 Hangzhou H3C Technologies Co., Ltd.

Creation Date   : Apr 22 2014,13:54:50
CPU Clock Speed : 1000MHz
Memory Size     : 2048MB
Flash Size      : 512MB
CPLD Version    : 003/003
PCB Version     : Ver.B

    <H3C>system-view
    [H3C]sysname tsd01
    [tsd01]local-user admin (admin/tsd01_password)
    [tsd01-luser-manage-admin]password simple tsdpassword@2023
    [tsd01-luser-manage-admin]service-type http https ssh
    [tsd01-luser-manage-admin]authorization-attribute user-role network-admin
    [tsd01-luser-manage-admin]quit
    [tsd01]interface M-GigabitEthernet 0/0/0
    [tsd01-M-GigabitEthernet0/0/0]ip address 10.170.6.201 24
    [tsd01-M-GigabitEthernet0/0/0]quit
    [tsd01]ip http enable
    [tsd01]ip https enable
    [tsd01]ssh server enable
    [tsd01]line vty 0 63
    [tsd01-line-vty0-63]authentication-mode scheme
    [tsd01-line-vty0-63]quit
    [tsd01]save force


  # Init
    reset saved-configuration
    reboot

  #配置双线连接堆叠
    SW1配置:
      1.将优先级调整为32;确保该设备被选举为Master;若不需要指定主设备可以略过
        irf member 1 priority 32
      2.关闭要加入的IRF的物理端口
        show interface brief / display interface brief
        interface FGE1/0/25
        shutdown
        quit
        interface FGE1/0/26
        shutdown
        quit
      3.创建IRF逻辑虚接口(设备号默认为1,端口号为2),把相连物理接口加入IRF
        irf-port 1/2
        port group interface FGE1/0/25
        port group interface FGE1/0/26
        quit
      4.重新打开物理端口
        interface FGE1/0/25
        undo shutdown
        quit
        interface FGE1/0/26
        undo shutdown
        quit
      5.激活IRF设置并保存配置
        irf-port-configuration active
        save force
    SW2配置:
      1.更改默认的设备号1为2并重启
        irf member 3 renumber 2
        reboot
      2.关闭要加入的IRF的物理端口
        interface FGE2/0/25
        shutdown
        quit
        interface FGE2/0/26
        shutdown
        quit
      3.创建IRF逻辑虚接口(设备号为2,端口号为1),把相连物理接口加入IRF
        irf-port 2/1
        port group interface FGE2/0/25
        port group interface FGE2/0/26
        quit
      4.重新打开物理端口,保存配置
        interface FGE2/0/25
        undo shutdown
        quit
        interface FGE2/0/26
        undo shutdown
        quit
      5.激活IRF设置,激活配置后,slave设备会自动重启
        save f
        irf-port-configuration active
    验证配置,查看状态
        display irf

  # 创建二层聚合接口1,并配置该接口为动态聚合模式
    system-view
    interface bridge-aggregation 1
    quit
    interface XGE1/0/1
    port link-aggregation group 1
    quit
    interface XGE2/0/1
    port link-aggregation group 1
    quit
    interface bridge-aggregation 1
    link-aggregation mode dynamic
    port link-type trunk
    port trunk permit vlan all
    display link-aggregation member-port
    ######################################## 
    sys
    interface bridge-aggregation 1
    link-aggregation mode dynamic
    # 配置二层聚合接口1为Trunk端口,并允许VLAN 10和20的报文通过。
    interface bridge-aggregation 1
    port link-type trunk
    port trunk permit vlan all/10 20
    quit
  # 配置全局按照报文的源MAC地址和目的MAC地址进行聚合负载分担。
    link-aggregation load-sharing mode source-mac destination-mac
    display link-aggregation summary
    display link-aggregation load-sharing mode
    # 分别将端口GigabitEthernet1/0/1,GigabitEthernet1/0/2加入到聚合组1中。
    interface gigabitethernet 1/0/1
    port link-aggregation group 1
    quit
    interface gigabitethernet 1/0/2
    port link-aggregation group 1
    quit
  # SSH登录公钥+密码认证
    public-key local create rsa
    local-user h3c
    password cipher h3c
    service-type ssh level 3
    # 公钥文件名mypubkey上传到交换机
    public-key peer xx import sshkey mypubkey
    ssh user h3c assign publickey xx
    ssh user h3c service-type stelnet
    ssh user h3c authentication-type password-publickey
  # OSPF
    <SWA>system-view
    vlan 100
    port GigabitEthernet 1/0/1
    quit
    vlan 200
    port GigabitEthernet 1/0/2
    quit
    interface vlan 100
    ip address 192.168.0.1 255.255.255.0
    quit
    interface vlan 200
    ip address 192.168.1.1 255.255.255.0
    quit
    # 启动ospf协议，并设置路由器的router id
    ospf 1 router-id 192.168.1.1
    #配置区域0并且发布网段
    area 0
    network 192.168.0.0 0.0.0.255
    quit
    quit
    #保存配置
    save force

    ### Pre-Config Generator Start ###
    system-view
    ### Pre-Config Generator End
    ### Sysname Generator Start ###
    sysname Test_Switch_01
    ### Sysname Generator End ###
    ### Vlan Generator Start ###
    vlan 10
    vlan 20
    vlan 30
    vlan 50 to 100
    ### Vlan Generator End ###
    ### SSH Generator Start ###
    local-user admin
    password simple password
    service-type ssh
    authorization-attribute user-role network-admin
    #
    ssh server enable
    #
    line vty 0 63
    authentication-mode scheme
    #
    ### SSH Generator End ###
    ### SVI Generator Start ###
    interface Vlan-interface10
    ip address 10.10.10.254 255.255.255.0
    ### SVI Generator End ###
    ### SVI Generator Start ###
    interface Vlan-interface20
    ip address 10.10.20.254 255.255.255.0
    ### SVI Generator End ###
    ### Link Aggregation Generator Start ###
    int bri 1
    link-aggregation mode dynamic
    port link-type trunk
    undo port trunk permit vlan 1
    port trunk permit vlan 30
    #
    int range G1/0/25 G1/0/26
    port link-type trunk
    undo port trunk permit vlan 1
    port trunk permit vlan 30
    port link-agg group 1
    ### Link Aggregation Generator End ###
    ### Default Route Generator Start ###
    ip route-static 0.0.0.0 0.0.0.0 20.20.20.254
    ### Default Route Generator End ###
    ### Static Route Generator Start ###
    ip route-static 20.20.20.0 255.255.255.0 vlan10
    ### Static Route Generator End ###
    ### SNMP Generator Start ###
    snmp-agent sys-info version v2c
    snmp-agent community read public
    snmp-agent community write private
    snmp-agent trap enable
    snmp-agent target-host trap address udp-domain 20.20.20.254 params securityname public v2c
    ### SNMP Generator End ###
    ### Access Port Generator Start ###
    int range G0/0/1 to G0/0/48
    port access vlan 30
    ### Access Port Generator End ###

#华为交换:
    ## 创建VLAN
        system-view
        vlan 100
        quit
    ## 将端口加入到vlan中
        interface GigabitEthernet2/0/1
        port link-type access
        port default vlan 100
        quit
    ## 交换机配置IP地址
        interface Vlanif100
        ip address 192.168.1.1 255.255.255.0
        quit
    ## 配置默认网关
        ip route-static 0.0.0.0 0.0.0.0 192.168.1.254
    ## 交换机保存设置和重置命令
        save    //保存配置信息
        reset saved-configuration   //重置交换机的配置
        reboot   //重新启动交换机

    ## 交换机常用的显示命令
        ### 用户视图模式下：
            display current-configuration   //显示现在交换机正在运行的配置明细
            display device    //显示各设备状态
            display interface xxx  //显示个端口状态，用？可以查看后边跟的选项
            display version   //查看交换机固件版本信息
            display vlan xxx   // 查看vlan的配置信息

############################################################
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display current-configuration')
print(output)
net_connect.disconnect()

# 配置华为交换机
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}

net_connect = ConnectHandler(**huawei_switch)
config_commands = ['interface gigabitethernet 0/0/1', 'ip address 192.168.2.1 255.255.255.0']
output = net_connect.send_config_set(config_commands)
print(output)
net_connect.disconnect()

# 查看华为交换机端口信息
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1')
print(output)
net_connect.disconnect()

# 查看华为交换机接口状态
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1')
if 'Line protocol state' in output and 'UP' in output:
    print('Interface is UP')
else:
    print('Interface is DOWN')
net_connect.disconnect()

# 查看华为交换机 ARP 表
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display arp')
print(output)
net_connect.disconnect()

# 查看华为交换机 CPU 使用率
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display cpu-usage')
print(output)
net_connect.disconnect()

# 查看华为交换机内存使用情况
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display memory-usage')
print(output)
net_connect.disconnect()

# 查看华为交换机端口带宽利用率
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display interface GigabitEthernet0/0/1 | include "Input rate|"Output rate"')
print(output)
net_connect.disconnect()

# 查看华为交换机 VLAN 信息
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display vlan')
print(output)
net_connect.disconnect()

# 查看华为交换机MAC表
from netmiko import ConnectHandler
huawei_switch = {
    'device_type': 'huawei',
    'ip': '192.168.1.1',
    'username': 'admin',
    'password': 'password',
}
net_connect = ConnectHandler(**huawei_switch)
output = net_connect.send_command('display mac-address')
print(output)
net_connect.disconnect()
################################################################################
# # neteye fw NISG-5200
show current-config
configure mode override
user administrator admin logintype web,ssh
interface ethernet eth0
