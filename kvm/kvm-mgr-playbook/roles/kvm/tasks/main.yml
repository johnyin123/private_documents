---
- name: Check requirements
  package:
    name:
      - python3-libvirt
    state: present
  become: yes

- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: no

- name: Create VM if not exists
  block:
  - name: Fail if vm_uuid is undefined
    ansible.builtin.fail: msg="vm_uuid not define!"
    when: vm_uuid is undefined

  - name: Copy base image to {{ vm_name }} {{ vm_uuid }}
    copy:
      src: "{{ base_image_name }}"
      dest: "{{ libvirt_pool_dir }}/{{ vm_name }}-{{ vm_uuid }}"
      mode: 0660
    register: copy_results

  - name: Configure the vm {{ vm_name }}-{{ vm_uuid }} image
    command: |
      echo "modify VM {{ libvirt_pool_dir }}/{{ vm_name }} hostname:{{ vm_name }}"
    when: copy_results is changed

  - name: Define vm {{ vm_name }}-{{ vm_uuid }}
    community.libvirt.virt:
      command: define
      xml: "{{ lookup('template', '{{ xml_template }}') }}"
  when: "vm_name not in existing_vms.list_vms"

- name: Start vm {{ vm_name }}-{{ vm_uuid }}
  community.libvirt.virt:
    name: "{{ vm_name }}-{{ vm_uuid }}"
    command: start

- name: Check VM is started
  community.libvirt.virt:
    name: "{{ vm_name }}-{{ vm_uuid }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 10
  delay: 3
